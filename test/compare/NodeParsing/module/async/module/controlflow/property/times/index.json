{"elemID":"component_1168","date":"6/5/2020","time":"12:00am","name":"times","pathname":"times","pathstr":"async/ControlFlow.times","path":[["/","async"],["/","ControlFlow"],[".","times"]],"flags":[],"source":[["/","async"],["/","ControlFlow"]],"sourcestr":"async/ControlFlow","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1163","date":"6/5/2020","time":"12:00am","name":"iterable","pathname":"iterable","pathstr":"async/ControlFlow.times(0","path":[["/","async"],["/","ControlFlow"],[".","times"],["(","iterable"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","times"]],"sourcestr":"async/ControlFlow.times","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","times"]],"name":"times","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","times"],["(","iterable"]],"name":"iterable","delimiter":"("}],"sanitaryName":"iterable"},{"elemID":"component_1164","date":"6/5/2020","time":"12:00am","name":"iteratee","pathname":"iteratee","pathstr":"async/ControlFlow.times(1","path":[["/","async"],["/","ControlFlow"],[".","times"],["(","iteratee"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","times"]],"sourcestr":"async/ControlFlow.times","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","times"]],"name":"times","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","times"],["(","iteratee"]],"name":"iteratee","delimiter":"("}],"sanitaryName":"iteratee"},{"elemID":"component_1165","date":"6/5/2020","time":"12:00am","name":"callback","pathname":"callback","pathstr":"async/ControlFlow.times(2","path":[["/","async"],["/","ControlFlow"],[".","times"],["(","callback"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","times"]],"sourcestr":"async/ControlFlow.times","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","times"]],"name":"times","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","times"],["(","callback"]],"name":"callback","delimiter":"("}],"sanitaryName":"callback"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n\nCalls the `iteratee` function `n` times, and accumulates results in the same\nmanner you would use with [map](async/Collections.map).\n\n\n### Example\n```javascript\n\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n    callback(null, {\n        id: 'user' + id\n    });\n};\n\n// generate 5 users\nasync.times(5, function(n, next) {\n    createUser(n, function(err, user) {\n        next(err, user);\n    });\n}, function(err, users) {\n    // we should now have 5 users\n});\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nCalls the `iteratee` function `n` times, and accumulates results in the same\nmanner you would use with [map](async/Collections.map).\n\n\n### Example\n```javascript\n\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n    callback(null, {\n        id: 'user' + id\n    });\n};\n\n// generate 5 users\nasync.times(5, function(n, next) {\n    createUser(n, function(err, user) {\n        next(err, user);\n    });\n}, function(err, users) {\n    // we should now have 5 users\n});\n\n```\n\n","context":[]}],"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","times"]],"name":"times","delimiter":"."}],"sourceFile":"dist\\async.js","sourceLine":4771,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"times","baseTagPath":"../../../../../../"}

{"elemID":"component_669","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.some~summary","path":[["/","async"],[".","some"],["~","summary"]],"flags":[],"source":[["/","async"],[".","some"]],"sourcestr":"async.some","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nReturns `true` if at least one element in the `coll` satisfies an async test.\nIf any iteratee call returns `true`, the main `callback` is immediately\ncalled.\n\nin parallel. The iteratee is passed a `callback(err, truthValue)` which must\nbe called with a boolean argument once it has completed. Invoked with\n(item, callback).\niteratee returns `true`, or after all the iteratee functions have finished.\nResult will be either `true` or `false` depending on the values of the async\ntests. Invoked with (err, result).\n\n### Example\n```javascript\n\nasync.some(['file1','file2','file3'], function(filePath, callback) {\n    fs.access(filePath, function(err) {\n        callback(null, !err)\n    });\n}, function(err, result) {\n    // if result is true then at least one of the files exists\n});\n\n```\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","some"]],"name":"some","delimiter":"."},{"path":[["/","async"],[".","some"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary","baseTagPath":"../../../../../../"}

{"elemID":"component_1607","date":"6/5/2020","time":"12:00am","name":"retryable","pathname":"retryable","pathstr":"async/ControlFlow.retryable","path":[["/","async"],["/","ControlFlow"],[".","retryable"]],"flags":[],"source":[["/","async"],["/","ControlFlow"]],"sourcestr":"async/ControlFlow","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false},{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1603","date":"6/5/2020","time":"12:00am","name":"opts","pathname":"opts","pathstr":"async/ControlFlow.retryable(0","path":[["/","async"],["/","ControlFlow"],[".","retryable"],["(","opts"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","retryable"]],"sourcestr":"async/ControlFlow.retryable","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","retryable"]],"name":"retryable","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","retryable"],["(","opts"]],"name":"opts","delimiter":"("}],"sanitaryName":"opts"},{"elemID":"component_1604","date":"6/5/2020","time":"12:00am","name":"task","pathname":"task","pathstr":"async/ControlFlow.retryable(1","path":[["/","async"],["/","ControlFlow"],[".","retryable"],["(","task"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","retryable"]],"sourcestr":"async/ControlFlow.retryable","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","retryable"]],"name":"retryable","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","retryable"],["(","task"]],"name":"task","delimiter":"("}],"sanitaryName":"task"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":4417,"summaryDoc":[{"doc":"\n\nA close relative of [`retry`](async/ControlFlow.retry).  This method wraps a task and makes it\nretryable, rather than immediately calling it with retries.\n\n\n### Example\n```javascript\nan error, based on the parameters specified in `opts`.\n\nasync.auto({\n    dep1: async.retryable(3, getFromFlakyService),\n    process: [\"dep1\", async.retryable(3, function (results, cb) {\n        maybeProcessData(results.dep1, cb);\n    })]\n}, callback);\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nA close relative of [`retry`](async/ControlFlow.retry).  This method wraps a task and makes it\nretryable, rather than immediately calling it with retries.\n\n\n### Example\n```javascript\nan error, based on the parameters specified in `opts`.\n\nasync.auto({\n    dep1: async.retryable(3, getFromFlakyService),\n    process: [\"dep1\", async.retryable(3, function (results, cb) {\n        maybeProcessData(results.dep1, cb);\n    })]\n}, callback);\n\n```\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","retryable"]],"name":"retryable","delimiter":"."}],"aliasTo":{"path":[["/","async"],["/","ControlFlow"],[".","retryable"]],"pathstr":"async/ControlFlow.retryable"},"sanitaryName":"retryable","baseTagPath":"../../../../../../"}

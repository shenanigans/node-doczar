{"elemID":"component_338","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.doWhilst~summary","path":[["/","async"],[".","doWhilst"],["~","summary"]],"flags":[],"source":[["/","async"],[".","doWhilst"]],"sourcestr":"async.doWhilst","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nThe post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\nthe order of operations, the arguments `test` and `iteratee` are switched.\n\n`doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\npasses. The function is passed a `callback(err)`, which must be called once\nit has completed with an optional `err` argument. Invoked with (callback).\nexecution of `iteratee`. Invoked with Invoked with the non-error callback\nresults of `iteratee`.\nfunction has failed and repeated execution of `iteratee` has stopped.\n`callback` will be passed an error and any arguments passed to the final\n`iteratee`'s callback. Invoked with (err, [results]);\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","doWhilst"]],"name":"doWhilst","delimiter":"."},{"path":[["/","async"],[".","doWhilst"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary_1","baseTagPath":"../../../../../../"}

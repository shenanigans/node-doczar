{"elemID":"component_1183","date":"6/5/2020","time":"12:00am","name":"seq","pathname":"seq","pathstr":"async/ControlFlow.seq","path":[["/","async"],["/","ControlFlow"],[".","seq"]],"flags":[],"source":[["/","async"],["/","ControlFlow"]],"sourcestr":"async/ControlFlow","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[{"elemID":"component_1172","date":"6/5/2020","time":"12:00am","name":"apply","pathname":"apply","pathstr":"async/ControlFlow.seq.apply","path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"]],"sourcestr":"async/ControlFlow.seq","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1170","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async/ControlFlow.seq.apply(0","path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"],["(",0]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"]],"sourcestr":"async/ControlFlow.seq.apply","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"null"]],"isPointer":false,"isArray":false,"generics":[],"name":"null","explicit":false}],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"]],"name":"apply","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"],["(",0]],"name":"","delimiter":"("}],"sanitaryName":"~0"},{"elemID":"component_1171","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async/ControlFlow.seq.apply(1","path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"],["(",1]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"]],"sourcestr":"async/ControlFlow.seq.apply","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"]],"name":"apply","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"],["(",1]],"name":"","delimiter":"("}],"sanitaryName":"1"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[".","apply"]],"name":"apply","delimiter":"."}],"sourceFile":"dist\\async.js","sourceLine":2580,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"apply"}],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1175","date":"6/5/2020","time":"12:00am","name":"args","pathname":"args","pathstr":"async/ControlFlow.seq(0","path":[["/","async"],["/","ControlFlow"],[".","seq"],["(","args"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"]],"sourcestr":"async/ControlFlow.seq","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n..., callback","context":[]}],"details":[{"doc":"\n..., callback","context":[]}],"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],["(","args"]],"name":"args","delimiter":"("}],"sanitaryName":"args"},{"elemID":"component_1176","date":"6/5/2020","time":"12:00am","name":"args","pathname":"args","pathstr":"async/ControlFlow.seq(1","path":[["/","async"],["/","ControlFlow"],[".","seq"],["(","args"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"]],"sourcestr":"async/ControlFlow.seq","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],["(","args"]],"name":"args","delimiter":"("}],"sanitaryName":"args_1"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1180","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async/ControlFlow.seq)0","path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"]],"sourcestr":"async/ControlFlow.seq","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[{"elemID":"component_1179","date":"6/5/2020","time":"12:00am","name":"apply","pathname":"apply","pathstr":"async/ControlFlow.seq)0.apply","path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0]],"sourcestr":"async/ControlFlow.seq)0","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1177","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async/ControlFlow.seq)0.apply(0","path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"],["(",0]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"]],"sourcestr":"async/ControlFlow.seq)0.apply","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0]],"name":"","delimiter":")"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"]],"name":"apply","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"],["(",0]],"name":"","delimiter":"("}],"sanitaryName":"~0"},{"elemID":"component_1178","date":"6/5/2020","time":"12:00am","name":"args","pathname":"args","pathstr":"async/ControlFlow.seq)0.apply(1","path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"],["(","args"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"]],"sourcestr":"async/ControlFlow.seq)0.apply","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0]],"name":"","delimiter":")"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"]],"name":"apply","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"],["(","args"]],"name":"args","delimiter":"("}],"sanitaryName":"args"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0]],"name":"","delimiter":")"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0],[".","apply"]],"name":"apply","delimiter":"."}],"sourceFile":"dist\\async.js","sourceLine":368,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"apply"}],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","seq"],[")",0]],"name":"","delimiter":")"}],"sanitaryName":"~0"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n\nVersion of the compose function that is more natural to read. Each function\nconsumes the return value of the previous function. It is the equivalent of\n[compose](async/ControlFlow.compose) with the arguments reversed.\n\nEach function is executed with the `this` binding of the composed function.\n\n\n### Example\n```javascript\n\n// Requires lodash (or underscore), express3 and dresende's orm2.\n// Part of an app, that fetches cats of the logged user.\n// This example uses `seq` function to avoid overnesting and error\n// handling clutter.\napp.get('/cats', function(request, response) {\n    var User = request.models.User;\n    async.seq(\n        _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n        function(user, fn) {\n            user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n        }\n    )(req.session.user_id, function (err, cats) {\n        if (err) {\n            console.error(err);\n            response.json({ status: 'error', message: err.message });\n        } else {\n            response.json({ status: 'ok', message: 'Cats found', data: cats });\n        }\n    });\n});\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nVersion of the compose function that is more natural to read. Each function\nconsumes the return value of the previous function. It is the equivalent of\n[compose](async/ControlFlow.compose) with the arguments reversed.\n\nEach function is executed with the `this` binding of the composed function.\n\n\n### Example\n```javascript\n\n// Requires lodash (or underscore), express3 and dresende's orm2.\n// Part of an app, that fetches cats of the logged user.\n// This example uses `seq` function to avoid overnesting and error\n// handling clutter.\napp.get('/cats', function(request, response) {\n    var User = request.models.User;\n    async.seq(\n        _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n        function(user, fn) {\n            user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n        }\n    )(req.session.user_id, function (err, cats) {\n        if (err) {\n            console.error(err);\n            response.json({ status: 'error', message: err.message });\n        } else {\n            response.json({ status: 'ok', message: 'Cats found', data: cats });\n        }\n    });\n});\n\n```\n\n","context":[]}],"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","seq"]],"name":"seq","delimiter":"."}],"sourceFile":"dist\\async.js","sourceLine":2523,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"seq","baseTagPath":"../../../../../../"}

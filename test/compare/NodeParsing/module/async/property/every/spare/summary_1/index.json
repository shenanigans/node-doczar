{"elemID":"component_406","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.every~summary","path":[["/","async"],[".","every"],["~","summary"]],"flags":[],"source":[["/","async"],[".","every"]],"sourcestr":"async.every","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nReturns `true` if every element in `coll` satisfies an async test. If any\niteratee call returns `false`, the main `callback` is immediately called.\n\ncollection in parallel. The iteratee is passed a `callback(err, truthValue)`\nwhich must be called with a  boolean argument once it has completed. Invoked\nwith (item, callback).\n`iteratee` functions have finished. Result will be either `true` or `false`\ndepending on the values of the async tests. Invoked with (err, result).\n\n### Example\n```javascript\n\nasync.every(['file1','file2','file3'], function(filePath, callback) {\n    fs.access(filePath, function(err) {\n        callback(null, !err)\n    });\n}, function(err, result) {\n    // if result is true then every file exists\n});\n\n```\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","every"]],"name":"every","delimiter":"."},{"path":[["/","async"],[".","every"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary_1","baseTagPath":"../../../../../../"}

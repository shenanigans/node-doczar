{"elemID":"component_784","date":"6/5/2020","time":"12:00am","name":"anySeries","pathname":"anySeries","pathstr":"async.anySeries","path":[["/","async"],[".","anySeries"]],"flags":[],"source":[["/","async"]],"sourcestr":"async","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_779","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.anySeries(0","path":[["/","async"],[".","someSeries"],["(","iterable"]],"flags":[],"source":[["/","async"],[".","anySeries"]],"sourcestr":"async.anySeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","anySeries"]],"name":"anySeries","delimiter":"."},{"path":[["/","async"],[".","anySeries"],["(",0]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","someSeries"],["(","iterable"]],"pathstr":"async.someSeries(0"},"sanitaryName":"0"},{"elemID":"component_780","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.anySeries(1","path":[["/","async"],[".","someSeries"],["(","iteratee"]],"flags":[],"source":[["/","async"],[".","anySeries"]],"sourcestr":"async.anySeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","anySeries"]],"name":"anySeries","delimiter":"."},{"path":[["/","async"],[".","anySeries"],["(",1]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","someSeries"],["(","iteratee"]],"pathstr":"async.someSeries(1"},"sanitaryName":"1"},{"elemID":"component_781","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.anySeries(2","path":[["/","async"],[".","someSeries"],["(","callback"]],"flags":[],"source":[["/","async"],[".","anySeries"]],"sourcestr":"async.anySeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","anySeries"]],"name":"anySeries","delimiter":"."},{"path":[["/","async"],[".","anySeries"],["(",2]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","someSeries"],["(","callback"]],"pathstr":"async.someSeries(2"},"sanitaryName":"2"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":5197,"summaryDoc":[{"doc":"\n\nThe same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n\nin parallel. The iteratee is passed a `callback(err, truthValue)` which must\nbe called with a boolean argument once it has completed. Invoked with\n(item, callback).\niteratee returns `true`, or after all the iteratee functions have finished.\nResult will be either `true` or `false` depending on the values of the async\ntests. Invoked with (err, result).\n\n","context":[]}],"details":[{"doc":"\n\nThe same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n\nin parallel. The iteratee is passed a `callback(err, truthValue)` which must\nbe called with a boolean argument once it has completed. Invoked with\n(item, callback).\niteratee returns `true`, or after all the iteratee functions have finished.\nResult will be either `true` or `false` depending on the values of the async\ntests. Invoked with (err, result).\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","anySeries"]],"name":"anySeries","delimiter":"."}],"sanitaryName":"anyseries","baseTagPath":"../../../../"}

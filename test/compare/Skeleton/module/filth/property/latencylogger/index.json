{"elemID":"component_1415","date":"6/5/2020","time":"12:00am","name":"LatencyLogger","pathname":"LatencyLogger","pathstr":"filth.LatencyLogger","path":[["/","filth"],[".","LatencyLogger"]],"flags":[],"source":[["/","filth"]],"sourcestr":"filth","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"class","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":true,"simpleCtype":"property","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[{"elemID":"component_1388","date":"6/5/2020","time":"12:00am","name":"latencies","pathname":"latencies","pathstr":"filth.LatencyLogger#latencies","path":[["/","filth"],[".","LatencyLogger"],["#","latencies"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[{"elemID":"component_1387","date":"6/5/2020","time":"12:00am","name":"total","pathname":"total","pathstr":"filth.LatencyLogger#latencies.total","path":[["/","filth"],[".","LatencyLogger"],["#","latencies"],[".","total"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"],["#","latencies"]],"sourcestr":"filth.LatencyLogger#latencies","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Number"]],"isPointer":false,"isArray":false,"generics":[],"name":"Number","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","latencies"]],"name":"latencies","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","latencies"],[".","total"]],"name":"total","delimiter":"."}],"sourceFile":"main.js","sourceLine":620,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"total"}],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","latencies"]],"name":"latencies","delimiter":"#"}],"sourceFile":"main.js","sourceLine":619,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"latencies"},{"elemID":"component_1386","date":"6/5/2020","time":"12:00am","name":"latencyTime","pathname":"latencyTime","pathstr":"filth.LatencyLogger#latencyTime","path":[["/","filth"],[".","LatencyLogger"],["#","latencyTime"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","latencyTime"]],"name":"latencyTime","delimiter":"#"}],"sourceFile":"main.js","sourceLine":618,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"latencytime"},{"elemID":"component_1385","date":"6/5/2020","time":"12:00am","name":"start","pathname":"start","pathstr":"filth.LatencyLogger#start","path":[["/","filth"],[".","LatencyLogger"],["#","start"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","start"]],"name":"start","delimiter":"#"}],"sourceFile":"main.js","sourceLine":617,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"start"}],"methods":[{"elemID":"component_1411","date":"6/5/2020","time":"12:00am","name":"getFinalLatency","pathname":"getFinalLatency","pathstr":"filth.LatencyLogger#getFinalLatency","path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1405","date":"6/5/2020","time":"12:00am","name":"name","pathname":"name","pathstr":"filth.LatencyLogger#getFinalLatency(name","path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"],["(","name"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"]],"sourcestr":"filth.LatencyLogger#getFinalLatency","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"String"]],"isPointer":false,"isArray":false,"generics":[],"name":"String","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nLogs a final named latency before totals are calculated.","context":[["/","filth"]]}],"details":[{"doc":"\nLogs a final named latency before totals are calculated.","context":[["/","filth"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"]],"name":"getFinalLatency","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"],["(","name"]],"name":"name","delimiter":"("}],"sanitaryName":"name"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1408","date":"6/5/2020","time":"12:00am","name":"latencies","pathname":"latencies","pathstr":"filth.LatencyLogger#getFinalLatency)latencies","path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"],[")","latencies"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"]],"sourcestr":"filth.LatencyLogger#getFinalLatency","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[{"path":[[null,"Object"]],"isPointer":false,"isArray":false,"generics":[{"name":"Number","path":[[null,"Number"]]}],"name":"Object","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nA map of logged latency names against the integer microsecond duration of each latency.\n","context":[["/","filth"]]}],"details":[{"doc":"\nA map of logged latency names against the integer microsecond duration of each latency.\n","context":[["/","filth"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"]],"name":"getFinalLatency","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"],[")","latencies"]],"name":"latencies","delimiter":")"}],"sanitaryName":"latencies"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nGenerates the final latency figure relative to a provided initial time and adds it to the\nlatencies under the name `total`. All named latencies will be totalled and the difference\nbetween this total and `total` is stored under an empty String. This represents the unaccounted\nlatency between `new LatencyLogger()` and `getFinalLatency()`. A safe clone of the full latency\nmap is returned. Subsequent calls to `getFinalLatency` will update `total` and the unaccounted\ntotal.\n\nIf a `name` argument is provided, a final named latency is logged before the total is\ncalculated.","context":[["/","filth"]]}],"details":[{"doc":"\nGenerates the final latency figure relative to a provided initial time and adds it to the\nlatencies under the name `total`. All named latencies will be totalled and the difference\nbetween this total and `total` is stored under an empty String. This represents the unaccounted\nlatency between `new LatencyLogger()` and `getFinalLatency()`. A safe clone of the full latency\nmap is returned. Subsequent calls to `getFinalLatency` will update `total` and the unaccounted\ntotal.\n\nIf a `name` argument is provided, a final named latency is logged before the total is\ncalculated.","context":[["/","filth"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","getFinalLatency"]],"name":"getFinalLatency","delimiter":"#"}],"sourceFile":"main.js","sourceLine":668,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"getfinallatency"},{"elemID":"component_1395","date":"6/5/2020","time":"12:00am","name":"latency","pathname":"latency","pathstr":"filth.LatencyLogger#latency","path":[["/","filth"],[".","LatencyLogger"],["#","latency"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1391","date":"6/5/2020","time":"12:00am","name":"name","pathname":"name","pathstr":"filth.LatencyLogger#latency(name","path":[["/","filth"],[".","LatencyLogger"],["#","latency"],["(","name"]],"flags":["optional"],"source":[["/","filth"],[".","LatencyLogger"],["#","latency"]],"sourcestr":"filth.LatencyLogger#latency","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"String"]],"isPointer":false,"isArray":false,"generics":[],"name":"String","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n    The name under which this latency should be logged. If no name is passed, or the passed name has\n    already been used, no latency is logged but the start time of the next logged latency is still\n    updated.\n\n    Note that any latency logged as `total` will be overwritten when [getFinalLatency]\n    (#getFinalLatency) is called.\nreturns:Boolean written\n    Whether a latency value was stored. `false` when a name conflict occurs.\n","context":[["/","filth"]]}],"details":[{"doc":"\n    The name under which this latency should be logged. If no name is passed, or the passed name has\n    already been used, no latency is logged but the start time of the next logged latency is still\n    updated.\n\n    Note that any latency logged as `total` will be overwritten when [getFinalLatency]\n    (#getFinalLatency) is called.\nreturns:Boolean written\n    Whether a latency value was stored. `false` when a name conflict occurs.\n","context":[["/","filth"]]}],"isOptional":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"]],"name":"latency","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"],["(","name"]],"name":"name","delimiter":"("}],"sanitaryName":"name"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1392","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"filth.LatencyLogger#latency)0","path":[["/","filth"],[".","LatencyLogger"],["#","latency"],[")",0]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"],["#","latency"]],"sourcestr":"filth.LatencyLogger#latency","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[{"path":[[null,"Boolean"]],"isPointer":false,"isArray":false,"generics":[],"name":"Boolean","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"]],"name":"latency","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"],[")",0]],"name":"","delimiter":")"}],"sanitaryName":"~0"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nLog a latency number in integer microseconds relative to the last latency logged. Calling with\nno `name` argument will reset the start time for the next logged latency. Multiple calls with\nthe same `name` will be added together to produce a total latency for the name.","context":[["/","filth"]]}],"details":[{"doc":"\nLog a latency number in integer microseconds relative to the last latency logged. Calling with\nno `name` argument will reset the start time for the next logged latency. Multiple calls with\nthe same `name` will be added together to produce a total latency for the name.","context":[["/","filth"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"]],"name":"latency","delimiter":"#"}],"sourceFile":"main.js","sourceLine":638,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"latency"},{"elemID":"component_1402","date":"6/5/2020","time":"12:00am","name":"log","pathname":"log","pathstr":"filth.LatencyLogger#log","path":[["/","filth"],[".","LatencyLogger"],["#","log"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1398","date":"6/5/2020","time":"12:00am","name":"name","pathname":"name","pathstr":"filth.LatencyLogger#log(name","path":[["/","filth"],[".","LatencyLogger"],["#","latency"],["(","name"]],"flags":["optional"],"source":[["/","filth"],[".","LatencyLogger"],["#","log"]],"sourcestr":"filth.LatencyLogger#log","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"String"]],"isPointer":false,"isArray":false,"generics":[],"name":"String","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n    The name under which this latency should be logged. If no name is passed, or the passed name has\n    already been used, no latency is logged but the start time of the next logged latency is still\n    updated.\n\n    Note that any latency logged as `total` will be overwritten when [getFinalLatency]\n    (#getFinalLatency) is called.\nreturns:Boolean written\n    Whether a latency value was stored. `false` when a name conflict occurs.\n","context":[["/","filth"]]}],"details":[{"doc":"\n    The name under which this latency should be logged. If no name is passed, or the passed name has\n    already been used, no latency is logged but the start time of the next logged latency is still\n    updated.\n\n    Note that any latency logged as `total` will be overwritten when [getFinalLatency]\n    (#getFinalLatency) is called.\nreturns:Boolean written\n    Whether a latency value was stored. `false` when a name conflict occurs.\n","context":[["/","filth"]]}],"isOptional":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","log"]],"name":"log","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","log"],["(","name"]],"name":"name","delimiter":"("}],"aliasTo":{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"],["(","name"]],"pathstr":"filth.LatencyLogger#latency(name"},"sanitaryName":"name"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1399","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"filth.LatencyLogger#log)0","path":[["/","filth"],[".","LatencyLogger"],["#","latency"],[")",0]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"],["#","log"]],"sourcestr":"filth.LatencyLogger#log","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","log"]],"name":"log","delimiter":"#"},{"path":[["/","filth"],[".","LatencyLogger"],["#","log"],[")",0]],"name":"","delimiter":")"}],"aliasTo":{"path":[["/","filth"],[".","LatencyLogger"],["#","latency"],[")",0]],"pathstr":"filth.LatencyLogger#latency)0"},"sanitaryName":"~0"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nLog a latency number in integer microseconds relative to the last latency logged. Calling with\nno `name` argument will reset the start time for the next logged latency. Multiple calls with\nthe same `name` will be added together to produce a total latency for the name.","context":[["/","filth"]]}],"details":[{"doc":"\nLog a latency number in integer microseconds relative to the last latency logged. Calling with\nno `name` argument will reset the start time for the next logged latency. Multiple calls with\nthe same `name` will be added together to produce a total latency for the name.","context":[["/","filth"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["#","log"]],"name":"log","delimiter":"#"}],"sourceFile":"main.js","sourceLine":650,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"log"}],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1412","date":"6/5/2020","time":"12:00am","name":"latencies","pathname":"latencies","pathstr":"filth.LatencyLogger(0","path":[["/","filth"],[".","LatencyLogger"],["(","latencies"]],"flags":[],"source":[["/","filth"],[".","LatencyLogger"]],"sourcestr":"filth.LatencyLogger","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."},{"path":[["/","filth"],[".","LatencyLogger"],["(","latencies"]],"name":"latencies","delimiter":"("}],"sanitaryName":"latencies"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nAn easy logging tool for tracking the myriad latencies of a long serial process and reporting\nthem all at once.\n","context":[["/","filth"]]}],"details":[{"doc":"\nAn easy logging tool for tracking the myriad latencies of a long serial process and reporting\nthem all at once.\n","context":[["/","filth"]]}],"isClasslike":true,"hasConstructorInfo":true,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","LatencyLogger"]],"name":"LatencyLogger","delimiter":"."}],"sourceFile":"main.js","sourceLine":839,"sourceModule":{"path":[["/","filth"]],"pathstr":"filth"},"sanitaryName":"latencylogger","baseTagPath":"../../../../"}

{"elemID":"component_1271","date":"6/5/2020","time":"12:00am","name":"clone","pathname":"clone","pathstr":"filth.clone","path":[["/","filth"],[".","clone"]],"flags":[],"source":[["/","filth"]],"sourcestr":"filth","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1265","date":"6/5/2020","time":"12:00am","name":"obj","pathname":"obj","pathstr":"filth.clone(obj","path":[["/","filth"],[".","clone"],["(","obj"]],"flags":[],"source":[["/","filth"],[".","clone"]],"sourcestr":"filth.clone","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"main.js","sourceLine":619,"summaryDoc":[{"doc":"\nOne argument of any JSON-compatible type to be cloned.","context":[["/","filth"]]}],"details":[{"doc":"\nOne argument of any JSON-compatible type to be cloned.","context":[["/","filth"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","clone"]],"name":"clone","delimiter":"."},{"path":[["/","filth"],[".","clone"],["(","obj"]],"name":"obj","delimiter":"("}],"sanitaryName":"obj"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1268","date":"6/5/2020","time":"12:00am","name":"newObj","pathname":"newObj","pathstr":"filth.clone)newObj","path":[["/","filth"],[".","clone"],[")","newObj"]],"flags":[],"source":[["/","filth"],[".","clone"]],"sourcestr":"filth.clone","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nA new object which is json-identical to `obj` ([compare](.compare) will return `true`) but\nshares no common Object or Array instances.\n","context":[["/","filth"]]}],"details":[{"doc":"\nA new object which is json-identical to `obj` ([compare](.compare) will return `true`) but\nshares no common Object or Array instances.\n","context":[["/","filth"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","clone"]],"name":"clone","delimiter":"."},{"path":[["/","filth"],[".","clone"],[")","newObj"]],"name":"newObj","delimiter":")"}],"sanitaryName":"newobj"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"main.js","sourceLine":828,"summaryDoc":[{"doc":"\nCreate a JSON-identical duplicate of a reference with no refs in common.","context":[["/","filth"]]}],"details":[{"doc":"\nCreate a JSON-identical duplicate of a reference with no refs in common.","context":[["/","filth"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","clone"]],"name":"clone","delimiter":"."}],"sanitaryName":"clone","baseTagPath":"../../../../"}

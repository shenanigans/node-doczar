0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.36
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /root/.npm/3a52ce78-.lock
10 verbose tar pack [ '/root/.npm/doczar/0.2.5/package.tgz', '.' ]
11 verbose tarball /root/.npm/doczar/0.2.5/package.tgz
12 verbose folder .
13 info prepublish doczar@0.2.5
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /root/.npm/1f1177db-tar.lock
16 silly lockFile ca4a476a-oot-npm-doczar-0-2-5-package-tgz tar:///root/.npm/doczar/0.2.5/package.tgz
17 verbose lock tar:///root/.npm/doczar/0.2.5/package.tgz /root/.npm/ca4a476a-oot-npm-doczar-0-2-5-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile ca4a476a-oot-npm-doczar-0-2-5-package-tgz tar:///root/.npm/doczar/0.2.5/package.tgz
21 silly lockFile ca4a476a-oot-npm-doczar-0-2-5-package-tgz tar:///root/.npm/doczar/0.2.5/package.tgz
22 silly lockFile 15b3d4fe-root-npm-doczar-0-2-5-package /root/.npm/doczar/0.2.5/package
23 verbose lock /root/.npm/doczar/0.2.5/package /root/.npm/15b3d4fe-root-npm-doczar-0-2-5-package.lock
24 silly lockFile 15b3d4fe-root-npm-doczar-0-2-5-package /root/.npm/doczar/0.2.5/package
25 silly lockFile 15b3d4fe-root-npm-doczar-0-2-5-package /root/.npm/doczar/0.2.5/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'doczar',
28 silly publish   version: '0.2.5',
28 silly publish   description: 'A highly flexible comments-only documentation generator.',
28 silly publish   keywords:
28 silly publish    [ 'documentation',
28 silly publish      'generator',
28 silly publish      'markdown',
28 silly publish      'node',
28 silly publish      'python',
28 silly publish      'ruby',
28 silly publish      'java',
28 silly publish      'c',
28 silly publish      'c++',
28 silly publish      'c#',
28 silly publish      'ObjectiveC',
28 silly publish      'Objective-C',
28 silly publish      'html',
28 silly publish      'css',
28 silly publish      'jdoc',
28 silly publish      'jsdoc',
28 silly publish      'rdoc',
28 silly publish      'epydoc',
28 silly publish      'naturaldocs' ],
28 silly publish   homepage: 'https://github.com/shenanigans/node-doczar',
28 silly publish   bugs: { url: 'https://github.com/shenanigans/node-doczar/issues' },
28 silly publish   license: 'MIT',
28 silly publish   author: { name: 'Kevin "Schmidty" Smith' },
28 silly publish   bin: { doczar: './cli.js' },
28 silly publish   main: 'main.js',
28 silly publish   dependencies:
28 silly publish    { marked: '^0.3.2',
28 silly publish      minimist: '^1.1.0',
28 silly publish      async: '^0.9.0',
28 silly publish      mkdirp: '^0.5.0',
28 silly publish      'fs-extra': '^0.11.1',
28 silly publish      colors: '^0.6.2',
28 silly publish      handlebars: '^2.0.0',
28 silly publish      required: 'git+http://github.com/shenanigans/node-required#9973bdbe81a1ca798470466a16d921084a3cb877',
28 silly publish      glob: '^4.0.6',
28 silly publish      'highlight.js': '^8.2.0',
28 silly publish      resolve: '^1.0.0' },
28 silly publish   readme: 'doczar\n======\n|    | Table Of Contents\n|---:|-------------------------------\n|  1 | [Installation](#installation)\n|  2 | [Shell Usage](#shell-usage)\n|  3 | [Development](#development)\n|  4 | [Comment Syntax](#comment-syntax)\n|  5 | [Components, Types and Paths](#components-types-and-paths)\n|  6 | [Documents and Spares](#documents-and-spares)\n|  7 | [Functions](#functions)\n|  8 | [Inheritence](#inheritence)\n|  9 | [Events and Errors](#events-and-errors)\n| 10 | [Generics](#generics)\n| 11 | [LICENSE](#license)\n\nDoczar (pronounced **dozer**) is a simple, explicit documentation generator for javascript, python,\nruby, java, c-like languages, and others.\n\nRather than attempting to document the source code itself, doczar **only** uses tagged comments. The\ncomment format has been designed for legibility and uses a simple scope model to make documenting\nlarge, complex entities easy.\n\n####Features\n * describe modules and object-oriented structures\n * inheritence, multiple inheritence and Java `interface`\n * Github-flavored markdown with syntax highlighting\n * semi-automatic crosslinking\n * callbacks and events\n * multiple return values and keyword arguments\n * function signatures\n * automatic Node.js [dependency graph](https://github.com/defunctzombie/node-required) documentation\n\n\nInstallation\n------------\nThere is currently no work-around for case-insensitive filesystems. That means you can\'t generate\ndocumentation on Windows (yet).\n```shell\n$ sudo npm install -g doczar\n```\nThe binary `doczar` is now on your executable path.\n\n\nShell Usage\n-----------\n```shell\n$ doczar --in=src/**/*.c --out docz\n$ doczar --jsmod ./main # outputs to ./docs\n```\n\noption          | description\n---------------:|---------------------------------\no, out          | Selects a directory to fill with documentation output. The directory need not exist or be empty.\ni, in           | Selects files to document. Parses nix-like wildcards using [glob](https://github.com/isaacs/node-glob). `doczar` does not parse directories - you must select files.\nj, js, jsmod    | Loads the filename with [required](https://github.com/defunctzombie/node-required) and documents every required source file.\ndev             | Display Components marked with the `@development` modifier.\napi             | Display **only** Components marked with the `@api` modifier.\n\n\nDevelopment\n-----------\n`doczar` is developed and maintained by Kevin "Schmidty" Smith under the MIT license. If you want to\nsee continued development on `doczar`, please help me [pay my bills!](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=PN6C2AZTS2FP8&lc=US&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted)\n\n\nComment Syntax\n--------------\n###Declarations\nThe simplest form of documentation is a single Declaration in its own block comment with an\ninformational summary. The opening line of a block comment must contain only the characters opening\nthe comment, a Declaration and as many spaces and tabs as you want. On the next line you may begin\ndescribing this unit of code with\n[github-flavored markdown](https://help.github.com/articles/github-flavored-markdown/).\n\nIn languages with c-like block comments (don\'t forget css) it looks like this:\n```c\n/**     @class MyClass\n    For compatibility purposes, c-like comments support any\n    number of asterisks *immediately after the slash*.\n*/\n```\n\nThe final newline is not required.\n```c\nint myInt = 42; /* @property/int myInt */\n```\n\nA special markdown caveat: you will need *two* newlines to terminate a bullet list.\n```c\n/**     @property/Function doTheThings\n    Does all the things. It does:\n     * the hottest things\n     * the coolest things\n     * all the things you could ever\n        possibly imagine\n\n    And it does them fast!\n*/\n```\n\nIn python, any "triple" string literal that meets the first-line requirements is a document comment.\n```python\ndef referenceMontyPython (skit):\n    """     @property/function referenceMontyPython\n        Either triple or triple-double is fine.\n    """\n```\n\nRuby users may use `=begin` and `=end` with the same rules.\n```ruby\n=begin  @module MyRubyGem\n    I don\'t know very much about Ruby.\n=end\n```\n\nFinally, HTML comments are also supported.\n```html\n<!--    @module SplashPage\n    Guest user landing page with corporate logo and account login/registration tools.\n-->\n```\n\nIndentation of a markdown section is automagically normalized to the least-indented line and you may\ninclude any number of tab and space characters before any Declaration. You can even break in the\nmiddle of a link definition.\n```c\n/** @member/int foo\n    A contracted document with\n    little available horizontal\n    space that needs a [link]\n    (http://google.com) to a\n    search engine.\n*/\n```\n\nTo add a child with a standalone doc comment, simply specify a\n[complex path](#components-types-and-paths) of any length.\n```c\n/**     @class FooClass\n    A simple class.\n*/\n/**     @property/Function FooClass.getDefault\n    Get a new default instance of FooClass.\n*/\n/**     @returns/FooClass FooClass.getDefault)defaultInstance\n    Returns a new instance with the default configuration.\n*/\n```\n\n\n###Inner Declarations\nOnce you have opened a declaration, you may write additional declarations which will all be scoped\nto the enclosing comment.\n\n```c\n/**     @class MyClass\n    A simple class.\n@property/Function getAllInstances\n    A static Function that returns all instances of MyClass.\n@member/Function doSomethingCool\n    A member Function on each instance of MyClass.\n*/\n```\n\n\n###Modules\nThe `@module` Declaration has an infectious scope. Every Declaration after it is scoped to the\nmodule Component, as are locally-rooted value types. (see [crosslinking](#crosslinking))\n```c\n/**     @module Foo\n    The Foo module.\n*/\n/**     @class Bar\n    The Foo.Bar class.\n*/\n```\n\n\n###Value Types\nA value type is declared with a forward slash. Multiple value types are declared with the pipe `|`\ncharacter.\n```c\n/**     @property/String foobar\n    A String property called "foobar".\n*/\n/**     @property/Number|undefined result\n    This property may be either a Number or `undefined`.\n*/\n```\n\n\n###Modifiers and Flags\nModifiers, and their simpler counterpart Flags, are statements which modify the Declaration directly\nabove them rather than declaring a new Component. Modifiers have serious consequences for the\nvisibility and position of a Component and its children. Flags just render literally as helpful\nkeywords in a contrasting color.\n```c\n/**     @class MyClass\n    @super LisasClass\n    @public\n    A simple subclass of Lisa\'s class.\n@member/String uniqueID\n    @const\n    This id String is generated at instantiation and because\n    it is constant, it will never give you up, never let you\n    down.\n*/\n```\n\nHere is a list of the available Modifiers and Flags\n####Modifiers\n * `@development` hides this Component unless the --dev flag is used\n * `@api` reveals this Component and its ancestors when the --api flag is used\n * `@optional` indicates something which need not exist (usually an argument)\n * `@super` inherits from a superclass\n * `@implements` associates an implemented Java interface\n\n####Flags\n * `@public`\n * `@protected`\n * `@private`\n * `@abstract`\n * `@final`\n * `@volatile`\n\n\n\nComponents, Types and Paths\n---------------------------\nLet\'s look at all the Components we have available.\n\n####Primary Components\nThese are the only Components which may be used to open a new document comment.\n * `@module` organizational Component\n * `@class` instantiable class objects\n * `@struct` c-like structures\n * `@interface` Java interface\n * `@spare` bare markdown document\n * `@property` static property\n * `@member` instance property or method\n * `@event` event descriptions\n * `@throws` conditions causing an exception to be thrown\n * `@enum` list of named values\n\n\n####Inner Components\nThese may only appear inside a document comment opened by a Primary Component Declaration.\n * `@argument` optionally-named function or event argument\n * `@kwarg` python-style keyword argument\n * `@callback` callback function\n * `@returns` return value\n * `@signature` an alternate function signature\n * `@named` a named value in an `@enum`.\n\nMany of these Component types have their own special path delimiters. This lets us reference more\nthings as paths than in any other document generator. Here they are:\n\n####Special Delimiters\n * `~` `@spare`\n * `.` `@property`\n * `#` `@member`\n * `(` `@argument`\n * `)` `@returns`\n * `!` `@throws`\n * `+` `@event`\n * `&` `@signature`\n\nYou can use a name starting with a delimiter to imply the Component type of any Inner Declaration,\nskipping directly to the value type. You may do this with any of the types listed above as an\nentirely optional feature. My personal recommendation is to use it only for `@property` and\n`@member`.\n\nThe default delimiter is `"."`, for `@property`.\n```c\n/**     @class MyClass\n@Function .getAllInstances\n    Load all instances of MyClass.\n@Number count\n    Total number of instances.\n@String #uniqueID\n    The unique identifier of this MyClass instance.\n@Error !EnvironFailure\n    Throws an Error during instantiation if the local\n    environment is configured incorrectly.\n@String (uniqueID\n    A unique identifier to instantiate with.\n*/\n```\n\nFeel free to document a type as being a pointer or array.\n```c\n/**     @struct Node\n    A linked list node.\n@member/Node* previous\n    Previous Node in the chain.\n@member/Node* next\n    Next Node in the chain.\n@member/String[] payload\n    Data stored by this node in the chain.\n*/\n```\n\n\n####Crosslinking\nYou can easily crosslink to any other defined Component using the normal markdown link syntax. If\nyou start a crosslink path with a delimiter, the target will be rooted to the current module scope.\n\nFurthermore, every defined Component is also a valid type, and the same rule applies when starting a\ntype path with a delimiter.\n```c\n/**     @module MyModule\n    A simple module.\n*/\n/**     @class MyClass\n    A simple class.\n*/\n/**     @property/Function clone\n@argument/.MyClass source\n    The [MyClass](.MyClass) instance to clone.\n@returns/MyModule.MyClass\n    The fresh [MyClass](MyModule.MyClass) instance.\n*/\n```\n\n\n\nDocuments and Spares\n--------------------\nYou may Declare a Component any number of times. Child Components and documentation accumulates in\nthe order in which it is loaded.\n```c\n/**     @class MyClass\n    Some information about MyClass.\n*/\n/**     @class MyClass\n    Some (more) information about MyClass.\n*/\n```\n\nAvailable exclusively as an Inner Declaration, `@load` allows you to pull in an external markdown\ndocument. Because in loaded docs it\'s valuable to support html hash links , i.e.\n`[more info](#more-info)`, it is impossible to properly support localized paths when using `@load`.\nYour links will be scoped to the global namespace and any type link starting with a delimiter will\nbe rejected.\n\nThis example is taken directly from the `doczar` doc comments.\n```c\n/**     @module doczar\n    Select, load and parse source files for `doczar`-format\n    documentation comments. Render html output to a\n    configured disk location.\n@spare README\n    This is the rendered output of the `doczar` source\n    documentation. *View the [source]\n    (https://github.com/shenanigans/node-doczar) on GitHub!*\n    @load\n        ./README.md\n*/\n```\n\n\nIn the first stage of rendering, the markdown document(s) on a Component are moved into new `@spare`\ninstances. The normal documentation appearing after a Declaration is moved to the path `~summary`.\nWhen available, `~summary` is used when a Component is displayed on another Component\'s output page,\nand `~details` is used on a Component\'s own page. If you choose to manually specify only one of\nthese two paths, all accumulated documentation not associated with a `@spare` will default to the\nunspecified path. When both paths are specified, unassociated documentation is appended to\n`~details`.\n\nThere is no limit to how many spares a Component may have, however their titles are subject to\nnormal namespace restrictions (sorry).\n```c\n/**     @class FooClass\n    Basic information.\n@spare details\n    Detailed information.\n*/\n/**     @class FooClass\n    More basic information.\n*/\n/**     @class BarClass\n    Detailed information.\n@spare summary\n    Basic information.\n*/\n/**     @class BarClass\n    More detailed information.\n*/\n```\n\n\n\nFunctions\n---------\nThe Inner Declarations `@argument`, `@kwarg`, `@callback`, `@signature` and `@returns` are used to\ndescribe Functions. During parsing, these Components have special scoping which is designed to help\nintuitively document an entire Function in one tag. Never forget that this special scope *only*\naffects these Component types *exclusively*. The scope will be immediately reset by the first\nnormal Declaration.\n\nHere is a simple Function Declaration with `@argument` and `@returns` declarations. You may name\nyour arguments and return values, or not.\n```c\n/**     @property/Function doTheDew\n    Do the Dew until you can\'t even.\n@argument/Number volume\n    Volume of Dew to do, in fluid ounces.\n@argument/String method\n    How to do the Dew.\n@returns/String message\n    Returns a hip phase, such as "Totally radical!!!".\n*/\n```\n\n```c\n/**     @property/Function sortItems\n    A sorting function for Item instances.\n@argument/Item\n    The first Item.\n@argument/Item\n    The second Item.\n@returns/Number\n    -1, 0, or 1.\n*/\n```\n\nKeyword arguments are as easy as replacing `@argument` with `@kwarg`.\n```c\n/**     @property/Function tellParrotJoke\n    Repeat some Monty Python jokes about a parrot.\n@kwarg/String parrotType\n    Type of parrot to joke about.\n*/\n```\n\n\n###Callback Functions\nThe `@callback` Declaration expands the `@argument` scope in order to document the callback\nFunction\'s arguments. You may reclose this scope with any unnamed `@returns` Declaration. You may\nname your callbacks, or not.\n```c\n/**     @property/Function loadDefinitions\n    Load definition file from the remote server.\n@argument/String hostname\n    URL of the remote server.\n@callback\n    @argument/Error|undefined error\n        If a fatal Error prevented the file from\n        being loaded properly, it is passed to\n        the callback.\n    @argument/Buffer|undefined definitionsFile\n        The loaded definitions file, or `undefined`\n        if an Error occured.\n    @returns\n@argument/Boolean devLogging\n    @optional\n    Activate development-mode logging messages.\n*/\n```\n\nAlthough I\'ve never seen this pattern used, it is possible to document multiple (pythonic)\n`@returns` Declarations on a `@callback`. You can still close the scope manually with a blank\n`@returns` Declaration.\n```c\n/**     @property/Function getJiggyWithIt\n    Get jiggy with it.\n@callback onError\n    Called if a fatal Exception occured.\n    @returns/function responseAction\n        What to do about the Exception.\n    @returns/Number priority\n        How important this reaction is.\n    @returns\n@callback onSuccess\n    Called if we got jiggy successfully.\n    @argument/Number jigginessLevel\n        Maximum level of jigginess achieved.\n*/\n```\n\n\n###Function Signatures\nIf you\'re writing an overloaded function with multiple signatures or need to document special\npermutations of optional arguments, `@signature` is there for you. It redefines the return value and\nargument signature and documents the signature separately.\n\nWhen you create a `@signature` with an Inner Declaration, the scope rules for Functions and\n`@argument` Components apply.\n```c\n/**     @property/Function writeBuffer\n    Interprets the contents of a Buffer as UTF-8\n    and writes it in the sky with smoke signals.\n@signature/Number (content)\n    Write out the entire Buffer and return the\n    number of bytes written.\n@signature/Number|undefined (content, bytes)\n    Write up to `bytes` bytes of text from\n    `content`. If there is content remaining,\n    returns the number of unwritten bytes.\n@argument/Buffer content\n    Text content to skywrite.\n@argument/Number bytes\n    Limit output to a set number of bytes.\n*/\n```\n\nSignatures may be declared in their own comments.\n```c\n/**     @signature writeBuffer (content, bytes)\n    Write up to `bytes` bytes of text from `content`.\n    If there is content remaining, returns the number\n    of unwritten bytes.\n```\n\nYou may also define a signature with value types. These types have no additional implications, they\nare only displayed in the documentation (and crosslinked).\n```c\n/**     @property/Function write\n    Output information through the Morse telegram interface.\n@argument content\n    The content to send.\n@signature (String content)\n    Send the content as ascii text, followed by `STOP`.\n@signature (Number content)\n    Convert the number to ascii text and send, followed\n    by `STOP`.\n@signature (Array[String] content)\n    Send each message, delimited and terminated with\n    `STOP`.\n*/\n```\n\nSignatures cannot be inherited or overridden individually.\n\n\n\nInheritence\n-----------\nTo inherit static and member properties from another Component of any type, use the `@super`\nmodifier.\n```c\n/**     @class BaseClass\n    A simple base class.\n@Function createDefault\n    Create and return a default instance.\n    @returns/.BaseClass\n@Function #toString\n    Produce a String representation of this instance.\n*/\n/**     @class SubClass\n    A simple subclass.\n@Function #toString\n    Overrides `BaseClass#toString`.\n*/\n```\n\nIf a Component with a superclass also has at least one value type that is exactly `"function"` or\n`"Function"`, it will also inherit arguments, signatures, return values and thrown exceptions.\n\nJava interfaces are also supported, with `@interface` and `@implements`.\n```c\n/**     @interface UniversalRemote\n    The common interface for a universal remote control.\n@member/Function volumeUp\n    Increase speaker volume.\n@member/Function volumeDown\n    Decrease speaker volume.\n*/\n/**     @class Tamtung_Model042_3\n    @implements .UniversalRemote\n@member/Function volumeUp\n    Increase speaker volume.\n@member/Function volumeDown\n    Decrease speaker volume.\n*/\n```\n\n\n\nEvents and Errors\n-----------------\nDocument events with the `@event` declaration. Pass information with your Event by attaching\n`@argument` Components.\n```c\n/**     @class Element\n    An HTML DOM Element.\n@event click\n    Sent when a user presses down and releases the\n    same mouse button within the bounding box of this\n    Element, without exceeding the host browser\'s\n    minimum threshold for [drag](Element+drag) events.\n    Unless cancelled, this event bubbles upward and\n    occurs in parent Elements until the `document` is\n    reached.\n    @argument/MouseEvent\n        The originating mouse event.\n*/\n```\n\nCases which cause exceptions to be thrown may be documented with the simple Declaration `@throws`.\nYou may name your exception cases, or not.\n```python\nclass dict:\n    """     @class dict\n        A hash map of Strings to untyped references.\n    """\n    def get (self, key):\n        """     @member/function dict#get\n            Retrieve a reference.\n        @throws/KeyError notFound\n            Failure to find a key results in an exception.\n        @throws/TypeError\n            If the key reference does not implement\n            `__hash__`, a TypeError is raised.\n        """\n```\n\n\n\n\n\nGenerics\n--------\nType paths support generics (java), templates (c++) and arrays-of-things (javascript). You may\nspecify any number of generic types on any type path, including with the use of multiple types and\npipes `|`.\n```c\n/**     @property/Array[String]|undefined fooProp\n    An Array of Strings, or undefined.\n*/\n```\n\n###Coming Soon\nGenerics in Class Declarations.\n```c\n/**     @class Container<Object elemType>\n    A container of arbitrarily-typed references.\n@function #get\n    @argument/String elemName\n        The name of the element to get.\n    @returns/%elemType|null\n        The requested element, or `null`.\n*/\n```\n\n\n\nLICENSE\n-------\nThe MIT License (MIT)\n\nCopyright (c) 2015 Kevin "Schmidty" Smith\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: '4ecb1f58f4ba3a7a1e23307f9dc60ae498e5aa4f',
28 silly publish   _id: 'doczar@0.2.5',
28 silly publish   scripts: {},
28 silly publish   _shasum: '76bb6b6c1a1419417a3c90f0acf44215bf89ce85',
28 silly publish   _from: '.' }
29 verbose request where is /doczar
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 2ed737d5e254009c
32 verbose url raw /doczar
33 verbose url resolving [ 'https://registry.npmjs.org/', './doczar' ]
34 verbose url resolved https://registry.npmjs.org/doczar
35 verbose request where is https://registry.npmjs.org/doczar
36 info trying registry request attempt 1 at 21:53:37
37 http PUT https://registry.npmjs.org/doczar
38 http 403 https://registry.npmjs.org/doczar
39 verbose headers { 'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '95',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Tue, 05 May 2015 21:53:38 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-ord1728-ORD',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1430862817.372572,VS0,VE1303' }
40 error publish Failed PUT 403
41 error Error: "You cannot publish over the previously published version 0.2.5." : doczar
41 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:944:16
41 error     at process._tickCallback (node.js:442:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 3.18.5-x86_64-linode52
44 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
45 error cwd /opt/node-doczar
46 error node -v v0.10.36
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]

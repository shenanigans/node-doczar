{"elemID":"component_425","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.filter~summary","path":[["/","async"],[".","filter"],["~","summary"]],"flags":[],"source":[["/","async"],[".","filter"]],"sourcestr":"async.filter","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nReturns a new array of all the values in `coll` which pass an async truth\ntest. This operation is performed in parallel, but the results array will be\nin the same order as the original.\n\nThe `iteratee` is passed a `callback(err, truthValue)`, which must be called\nwith a boolean argument once it has completed. Invoked with (item, callback).\n`iteratee` functions have finished. Invoked with (err, results).\n\n### Example\n```javascript\n\nasync.filter(['file1','file2','file3'], function(filePath, callback) {\n    fs.access(filePath, function(err) {\n        callback(null, !err)\n    });\n}, function(err, results) {\n    // results now equals an array of the existing files\n});\n\n```\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","filter"]],"name":"filter","delimiter":"."},{"path":[["/","async"],[".","filter"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary_1","baseTagPath":"../../../../../../"}

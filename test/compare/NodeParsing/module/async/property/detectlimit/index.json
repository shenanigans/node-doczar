{"elemID":"component_311","date":"6/5/2020","time":"12:00am","name":"detectLimit","pathname":"detectLimit","pathstr":"async.detectLimit","path":[["/","async"],[".","detectLimit"]],"flags":[],"source":[["/","async"]],"sourcestr":"async","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_305","date":"6/5/2020","time":"12:00am","name":"arr","pathname":"arr","pathstr":"async.detectLimit(0","path":[["/","async"],[".","detectLimit"],["(","arr"]],"flags":[],"source":[["/","async"],[".","detectLimit"]],"sourcestr":"async.detectLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","detectLimit"]],"name":"detectLimit","delimiter":"."},{"path":[["/","async"],[".","detectLimit"],["(","arr"]],"name":"arr","delimiter":"("}],"sanitaryName":"arr"},{"elemID":"component_306","date":"6/5/2020","time":"12:00am","name":"limit","pathname":"limit","pathstr":"async.detectLimit(1","path":[["/","async"],[".","detectLimit"],["(","limit"]],"flags":[],"source":[["/","async"],[".","detectLimit"]],"sourcestr":"async.detectLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","detectLimit"]],"name":"detectLimit","delimiter":"."},{"path":[["/","async"],[".","detectLimit"],["(","limit"]],"name":"limit","delimiter":"("}],"sanitaryName":"limit"},{"elemID":"component_307","date":"6/5/2020","time":"12:00am","name":"iteratee","pathname":"iteratee","pathstr":"async.detectLimit(2","path":[["/","async"],[".","detectLimit"],["(","iteratee"]],"flags":[],"source":[["/","async"],[".","detectLimit"]],"sourcestr":"async.detectLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","detectLimit"]],"name":"detectLimit","delimiter":"."},{"path":[["/","async"],[".","detectLimit"],["(","iteratee"]],"name":"iteratee","delimiter":"("}],"sanitaryName":"iteratee"},{"elemID":"component_308","date":"6/5/2020","time":"12:00am","name":"cb","pathname":"cb","pathstr":"async.detectLimit(3","path":[["/","async"],[".","detectLimit"],["(","cb"]],"flags":[],"source":[["/","async"],[".","detectLimit"]],"sourcestr":"async.detectLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","detectLimit"]],"name":"detectLimit","delimiter":"."},{"path":[["/","async"],[".","detectLimit"],["(","cb"]],"name":"cb","delimiter":"("}],"sanitaryName":"cb"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":5132,"summaryDoc":[{"doc":"\n\nThe same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\ntime.\n\nThe iteratee is passed a `callback(err, truthValue)` which must be called\nwith a boolean argument once it has completed. Invoked with (item, callback).\niteratee returns `true`, or after all the `iteratee` functions have finished.\nResult will be the first item in the array that passes the truth test\n(iteratee) or the value `undefined` if none passed. Invoked with\n(err, result).\n\n","context":[]}],"details":[{"doc":"\n\nThe same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\ntime.\n\nThe iteratee is passed a `callback(err, truthValue)` which must be called\nwith a boolean argument once it has completed. Invoked with (item, callback).\niteratee returns `true`, or after all the `iteratee` functions have finished.\nResult will be the first item in the array that passes the truth test\n(iteratee) or the value `undefined` if none passed. Invoked with\n(err, result).\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","detectLimit"]],"name":"detectLimit","delimiter":"."}],"sanitaryName":"detectlimit","baseTagPath":"../../../../"}

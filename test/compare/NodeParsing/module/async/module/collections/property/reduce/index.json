{"elemID":"component_653","date":"6/5/2020","time":"12:00am","name":"reduce","pathname":"reduce","pathstr":"async/Collections.reduce","path":[["/","async"],["/","Collections"],[".","reduce"]],"flags":[],"source":[["/","async"],["/","Collections"]],"sourcestr":"async/Collections","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false},{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_647","date":"6/5/2020","time":"12:00am","name":"coll","pathname":"coll","pathstr":"async/Collections.reduce(0","path":[["/","async"],["/","Collections"],[".","reduce"],["(","coll"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","reduce"]],"sourcestr":"async/Collections.reduce","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n..., callback","context":[]}],"details":[{"doc":"\n..., callback","context":[]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","reduce"]],"name":"reduce","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","reduce"],["(","coll"]],"name":"coll","delimiter":"("}],"sanitaryName":"coll"},{"elemID":"component_648","date":"6/5/2020","time":"12:00am","name":"memo","pathname":"memo","pathstr":"async/Collections.reduce(1","path":[["/","async"],["/","Collections"],[".","reduce"],["(","memo"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","reduce"]],"sourcestr":"async/Collections.reduce","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","reduce"]],"name":"reduce","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","reduce"],["(","memo"]],"name":"memo","delimiter":"("}],"sanitaryName":"memo"},{"elemID":"component_649","date":"6/5/2020","time":"12:00am","name":"iteratee","pathname":"iteratee","pathstr":"async/Collections.reduce(2","path":[["/","async"],["/","Collections"],[".","reduce"],["(","iteratee"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","reduce"]],"sourcestr":"async/Collections.reduce","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","reduce"]],"name":"reduce","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","reduce"],["(","iteratee"]],"name":"iteratee","delimiter":"("}],"sanitaryName":"iteratee"},{"elemID":"component_650","date":"6/5/2020","time":"12:00am","name":"callback","pathname":"callback","pathstr":"async/Collections.reduce(3","path":[["/","async"],["/","Collections"],[".","reduce"],["(","callback"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","reduce"]],"sourcestr":"async/Collections.reduce","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","reduce"]],"name":"reduce","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","reduce"],["(","callback"]],"name":"callback","delimiter":"("}],"sanitaryName":"callback"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":2473,"summaryDoc":[{"doc":"\n\nReduces `coll` into a single value using an async `iteratee` to return each\nsuccessive step. `memo` is the initial state of the reduction. This function\nonly operates in series.\n\nFor performance reasons, it may make sense to split a call to this function\ninto a parallel map, and then use the normal `Array.prototype.reduce` on the\nresults. This function is for situations where each step in the reduction\nneeds to be async; if you can get the data before reducing it, then it's\nprobably a good idea to do so.\n\n\n### Example\n```javascript\n`iteratee` functions have finished. Result is the reduced value. Invoked with\n(err, result).\n\nasync.reduce([1,2,3], 0, function(memo, item, callback) {\n    // pointless async:\n    process.nextTick(function() {\n        callback(null, memo + item)\n    });\n}, function(err, result) {\n    // result is now equal to the last value of memo, which is 6\n});\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nReduces `coll` into a single value using an async `iteratee` to return each\nsuccessive step. `memo` is the initial state of the reduction. This function\nonly operates in series.\n\nFor performance reasons, it may make sense to split a call to this function\ninto a parallel map, and then use the normal `Array.prototype.reduce` on the\nresults. This function is for situations where each step in the reduction\nneeds to be async; if you can get the data before reducing it, then it's\nprobably a good idea to do so.\n\n\n### Example\n```javascript\n`iteratee` functions have finished. Result is the reduced value. Invoked with\n(err, result).\n\nasync.reduce([1,2,3], 0, function(memo, item, callback) {\n    // pointless async:\n    process.nextTick(function() {\n        callback(null, memo + item)\n    });\n}, function(err, result) {\n    // result is now equal to the last value of memo, which is 6\n});\n\n```\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","reduce"]],"name":"reduce","delimiter":"."}],"aliasTo":{"path":[["/","async"],["/","Collections"],[".","reduce"]],"pathstr":"async/Collections.reduce"},"sanitaryName":"reduce","baseTagPath":"../../../../../../"}

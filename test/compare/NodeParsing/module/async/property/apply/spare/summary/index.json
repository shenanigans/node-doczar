{"elemID":"component_214","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.apply~summary","path":[["/","async"],[".","apply"],["~","summary"]],"flags":[],"source":[["/","async"],[".","apply"]],"sourcestr":"async.apply","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nCreates a continuation function with some arguments already applied.\n\nUseful as a shorthand when combined with other control flow functions. Any\narguments passed to the returned function are added to the arguments\noriginally passed to apply.\n\narguments to. Invokes with (arguments...).\nwhen the continuation is called.\n\n### Example\n```javascript\n\n// using apply\nasync.parallel([\n    async.apply(fs.writeFile, 'testfile1', 'test1'),\n    async.apply(fs.writeFile, 'testfile2', 'test2')\n]);\n\n\n// the same process without using apply\nasync.parallel([\n    function(callback) {\n        fs.writeFile('testfile1', 'test1', callback);\n    },\n    function(callback) {\n        fs.writeFile('testfile2', 'test2', callback);\n    }\n]);\n\n// It's possible to pass any number of additional arguments when calling the\n// continuation:\n\nnode> var fn = async.apply(sys.puts, 'one');\nnode> fn('two', 'three');\none\ntwo\nthree\n\n```\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","apply"]],"name":"apply","delimiter":"."},{"path":[["/","async"],[".","apply"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary","baseTagPath":"../../../../../../"}

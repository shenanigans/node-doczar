{"elemID":"component_1433","date":"6/5/2020","time":"12:00am","name":"circularClone","pathname":"circularClone","pathstr":"filth.circularClone","path":[["/","filth"],[".","circularClone"]],"flags":[],"source":[["/","filth"]],"sourcestr":"filth","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1428","date":"6/5/2020","time":"12:00am","name":"target","pathname":"target","pathstr":"filth.circularClone(target","path":[["/","filth"],[".","circularClone"],["(","target"]],"flags":[],"source":[["/","filth"],[".","circularClone"]],"sourcestr":"filth.circularClone","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Object"]],"isPointer":false,"isArray":false,"generics":[],"name":"Object","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nUnlike when using [clone](.clone) the `target` argument must be an Object.\n","context":[["/","filth"]]}],"details":[{"doc":"\nUnlike when using [clone](.clone) the `target` argument must be an Object.\n","context":[["/","filth"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","circularClone"]],"name":"circularClone","delimiter":"."},{"path":[["/","filth"],[".","circularClone"],["(","target"]],"name":"target","delimiter":"("}],"sanitaryName":"target"},{"elemID":"component_1429","date":"6/5/2020","time":"12:00am","name":"filter","pathname":"filter","pathstr":"filth.circularClone(1","path":[["/","filth"],[".","circularClone"],["(","filter"]],"flags":[],"source":[["/","filth"],[".","circularClone"]],"sourcestr":"filth.circularClone","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","circularClone"]],"name":"circularClone","delimiter":"."},{"path":[["/","filth"],[".","circularClone"],["(","filter"]],"name":"filter","delimiter":"("}],"sanitaryName":"filter"},{"elemID":"component_1430","date":"6/5/2020","time":"12:00am","name":"shallowFilter","pathname":"shallowFilter","pathstr":"filth.circularClone(2","path":[["/","filth"],[".","circularClone"],["(","shallowFilter"]],"flags":[],"source":[["/","filth"],[".","circularClone"]],"sourcestr":"filth.circularClone","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","circularClone"]],"name":"circularClone","delimiter":"."},{"path":[["/","filth"],[".","circularClone"],["(","shallowFilter"]],"name":"shallowFilter","delimiter":"("}],"sanitaryName":"shallowfilter"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"main.js","sourceLine":839,"summaryDoc":[{"doc":"\nCreate a JSON-identical duplicate of a reference that tolerates and preserves circular\nreferences. When encountered, a circular reference in `target` will create a similar circular\nreference in the clone, pointing to the cloned reference rather than the original.\n\nNote that even when ES6 Maps are available this is not a fast process for complex Objects.","context":[["/","filth"]]}],"details":[{"doc":"\nCreate a JSON-identical duplicate of a reference that tolerates and preserves circular\nreferences. When encountered, a circular reference in `target` will create a similar circular\nreference in the clone, pointing to the cloned reference rather than the original.\n\nNote that even when ES6 Maps are available this is not a fast process for complex Objects.","context":[["/","filth"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","circularClone"]],"name":"circularClone","delimiter":"."}],"sanitaryName":"circularclone","baseTagPath":"../../../../"}

{"elemID":"component_1294","date":"6/5/2020","time":"12:00am","name":"inherit","pathname":"inherit","pathstr":"filth.inherit","path":[["/","filth"],[".","inherit"]],"flags":[],"source":[["/","filth"]],"sourcestr":"filth","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1288","date":"6/5/2020","time":"12:00am","name":"child","pathname":"child","pathstr":"filth.inherit(child","path":[["/","filth"],[".","inherit"],["(","child"]],"flags":[],"source":[["/","filth"],[".","inherit"]],"sourcestr":"filth.inherit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nThe class which will inherit from `parent`. Its prototype will be replaced with one chained to\n`parent` and own properties will be transfered over.","context":[["/","filth"]]}],"details":[{"doc":"\nThe class which will inherit from `parent`. Its prototype will be replaced with one chained to\n`parent` and own properties will be transfered over.","context":[["/","filth"]]}],"isClasslike":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","inherit"]],"name":"inherit","delimiter":"."},{"path":[["/","filth"],[".","inherit"],["(","child"]],"name":"child","delimiter":"("}],"sanitaryName":"child"},{"elemID":"component_1291","date":"6/5/2020","time":"12:00am","name":"parent","pathname":"parent","pathstr":"filth.inherit(parent","path":[["/","filth"],[".","inherit"],["(","parent"]],"flags":[],"source":[["/","filth"],[".","inherit"]],"sourcestr":"filth.inherit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nThe class which will modify `child`. It is used to generate a new prototype for `child` which is\nchained to `parent` and its ancestors.\n","context":[["/","filth"]]}],"details":[{"doc":"\nThe class which will modify `child`. It is used to generate a new prototype for `child` which is\nchained to `parent` and its ancestors.\n","context":[["/","filth"]]}],"isClasslike":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","inherit"]],"name":"inherit","delimiter":"."},{"path":[["/","filth"],[".","inherit"],["(","parent"]],"name":"parent","delimiter":"("}],"sanitaryName":"parent"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"main.js","sourceLine":831,"summaryDoc":[{"doc":"\nPerform a simple prototype inheritence operation to cause the first argument to inherit from the\nlast. Unlike [util.inherits]() the child prototype's own properties are copied over, so you can\ncall `inherit` after setting up the prototype on `child` without anything getting left behind.","context":[["/","filth"]]}],"details":[{"doc":"\nPerform a simple prototype inheritence operation to cause the first argument to inherit from the\nlast. Unlike [util.inherits]() the child prototype's own properties are copied over, so you can\ncall `inherit` after setting up the prototype on `child` without anything getting left behind.","context":[["/","filth"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","filth"]],"name":"filth","delimiter":"/"},{"path":[["/","filth"],[".","inherit"]],"name":"inherit","delimiter":"."}],"sanitaryName":"inherit","baseTagPath":"../../../../"}

{"elemID":"component_586","date":"6/5/2020","time":"12:00am","name":"priorityQueue","pathname":"priorityQueue","pathstr":"async.priorityQueue","path":[["/","async"],[".","priorityQueue"]],"flags":[],"source":[["/","async"]],"sourcestr":"async","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function"}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_581","date":"6/5/2020","time":"12:00am","name":"worker","pathname":"worker","pathstr":"async.priorityQueue(0","path":[["/","async"],[".","priorityQueue"],["(","worker"]],"flags":[],"source":[["/","async"],[".","priorityQueue"]],"sourcestr":"async.priorityQueue","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function"}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_579","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.priorityQueue(worker(0","path":[["/","async"],[".","priorityQueue"],["(","worker"],["(",0]],"flags":[],"source":[["/","async"],[".","priorityQueue"],["(","worker"]],"sourcestr":"async.priorityQueue(0","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","priorityQueue"]],"name":"priorityQueue","delimiter":"."},{"path":[["/","async"],[".","priorityQueue"],["(","worker"]],"name":"worker","delimiter":"("},{"path":[["/","async"],[".","priorityQueue"],["(","worker"],["(",0]],"name":"","delimiter":"("}],"sanitaryName":"0"},{"elemID":"component_580","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.priorityQueue(worker(1","path":[["/","async"],[".","priorityQueue"],["(","worker"],["(",1]],"flags":[],"source":[["/","async"],[".","priorityQueue"],["(","worker"]],"sourcestr":"async.priorityQueue(0","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function"}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isFunction":false,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","priorityQueue"]],"name":"priorityQueue","delimiter":"."},{"path":[["/","async"],[".","priorityQueue"],["(","worker"]],"name":"worker","delimiter":"("},{"path":[["/","async"],[".","priorityQueue"],["(","worker"],["(",1]],"name":"","delimiter":"("}],"sanitaryName":"1"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","priorityQueue"]],"name":"priorityQueue","delimiter":"."},{"path":[["/","async"],[".","priorityQueue"],["(","worker"]],"name":"worker","delimiter":"("}],"sanitaryName":"worker"},{"elemID":"component_582","date":"6/5/2020","time":"12:00am","name":"concurrency","pathname":"concurrency","pathstr":"async.priorityQueue(1","path":[["/","async"],[".","priorityQueue"],["(","concurrency"]],"flags":[],"source":[["/","async"],[".","priorityQueue"]],"sourcestr":"async.priorityQueue","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","priorityQueue"]],"name":"priorityQueue","delimiter":"."},{"path":[["/","async"],[".","priorityQueue"],["(","concurrency"]],"name":"concurrency","delimiter":"("}],"sanitaryName":"concurrency"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_583","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.priorityQueue)","path":[["/","async"],[".","priorityQueue"],[")",""]],"flags":[],"source":[["/","async"],[".","priorityQueue"]],"sourcestr":"async.priorityQueue","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[{"path":[[null,"Object"]],"isPointer":false,"isArray":false,"generics":[],"name":"Object"}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isInline":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","priorityQueue"]],"name":"priorityQueue","delimiter":"."},{"path":[["/","async"],[".","priorityQueue"],[")",""]],"name":"","delimiter":")"}],"sanitaryName":""}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"sourceFile":"async.js","sourceLine":3907,"summaryDoc":[{"doc":"\n\nThe same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\ncompleted in ascending priority order.\n\ntask, which must call its `callback(err)` argument when finished, with an\noptional `error` as an argument.  If you want to handle errors from an\nindividual task, pass a callback to `q.push()`. Invoked with\n(task, callback).\nfunctions should be run in parallel.  If omitted, the concurrency defaults to\n`1`.  If the concurrency is `0`, an error is thrown.\ndifferences between `queue` and `priorityQueue` objects:\n* `push(task, priority, [callback])` - `priority` should be a number. If an\n  array of `tasks` is given, all tasks will be assigned the same priority.\n* The `unshift` method was removed.\n\n","context":[]}],"details":[{"doc":"\n\nThe same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\ncompleted in ascending priority order.\n\ntask, which must call its `callback(err)` argument when finished, with an\noptional `error` as an argument.  If you want to handle errors from an\nindividual task, pass a callback to `q.push()`. Invoked with\n(task, callback).\nfunctions should be run in parallel.  If omitted, the concurrency defaults to\n`1`.  If the concurrency is `0`, an error is thrown.\ndifferences between `queue` and `priorityQueue` objects:\n* `push(task, priority, [callback])` - `priority` should be a number. If an\n  array of `tasks` is given, all tasks will be assigned the same priority.\n* The `unshift` method was removed.\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","priorityQueue"]],"name":"priorityQueue","delimiter":"."}],"sanitaryName":"priorityqueue","baseTagPath":"../../../../"}
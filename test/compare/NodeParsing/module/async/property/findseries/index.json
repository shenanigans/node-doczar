{"elemID":"component_805","date":"6/5/2020","time":"12:00am","name":"findSeries","pathname":"findSeries","pathstr":"async.findSeries","path":[["/","async"],[".","findSeries"]],"flags":[],"source":[["/","async"]],"sourcestr":"async","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_799","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.findSeries(0","path":[["/","async"],[".","detectSeries"],["(","arr"]],"flags":[],"source":[["/","async"],[".","findSeries"]],"sourcestr":"async.findSeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","findSeries"]],"name":"findSeries","delimiter":"."},{"path":[["/","async"],[".","findSeries"],["(",0]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","detectSeries"],["(","arr"]],"pathstr":"async.detectSeries(0"},"sanitaryName":"~0"},{"elemID":"component_800","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.findSeries(1","path":[["/","async"],[".","detectSeries"],["(","limit"]],"flags":[],"source":[["/","async"],[".","findSeries"]],"sourcestr":"async.findSeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","findSeries"]],"name":"findSeries","delimiter":"."},{"path":[["/","async"],[".","findSeries"],["(",1]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","detectSeries"],["(","limit"]],"pathstr":"async.detectSeries(1"},"sanitaryName":"1"},{"elemID":"component_801","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.findSeries(2","path":[["/","async"],[".","detectSeries"],["(","iteratee"]],"flags":[],"source":[["/","async"],[".","findSeries"]],"sourcestr":"async.findSeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","findSeries"]],"name":"findSeries","delimiter":"."},{"path":[["/","async"],[".","findSeries"],["(",2]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","detectSeries"],["(","iteratee"]],"pathstr":"async.detectSeries(2"},"sanitaryName":"2"},{"elemID":"component_802","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"async.findSeries(3","path":[["/","async"],[".","detectSeries"],["(","cb"]],"flags":[],"source":[["/","async"],[".","findSeries"]],"sourcestr":"async.findSeries","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","findSeries"]],"name":"findSeries","delimiter":"."},{"path":[["/","async"],[".","findSeries"],["(",3]],"name":"","delimiter":"("}],"aliasTo":{"path":[["/","async"],[".","detectSeries"],["(","cb"]],"pathstr":"async.detectSeries(3"},"sanitaryName":"3"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":5200,"summaryDoc":[{"doc":"\n\nThe same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n\nThe iteratee is passed a `callback(err, truthValue)` which must be called\nwith a boolean argument once it has completed. Invoked with (item, callback).\niteratee returns `true`, or after all the `iteratee` functions have finished.\nResult will be the first item in the array that passes the truth test\n(iteratee) or the value `undefined` if none passed. Invoked with\n(err, result).\n\n","context":[]}],"details":[{"doc":"\n\nThe same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n\nThe iteratee is passed a `callback(err, truthValue)` which must be called\nwith a boolean argument once it has completed. Invoked with (item, callback).\niteratee returns `true`, or after all the `iteratee` functions have finished.\nResult will be the first item in the array that passes the truth test\n(iteratee) or the value `undefined` if none passed. Invoked with\n(err, result).\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","findSeries"]],"name":"findSeries","delimiter":"."}],"sanitaryName":"findseries","baseTagPath":"../../../../"}

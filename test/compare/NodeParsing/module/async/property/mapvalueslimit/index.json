{"elemID":"component_402","date":"6/5/2020","time":"12:00am","name":"mapValuesLimit","pathname":"mapValuesLimit","pathstr":"async.mapValuesLimit","path":[["/","async"],[".","mapValuesLimit"]],"flags":[],"source":[["/","async"]],"sourcestr":"async","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function"}],"isKwarg":false,"isMultiArg":false,"isFunction":true,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_396","date":"6/5/2020","time":"12:00am","name":"obj","pathname":"obj","pathstr":"async.mapValuesLimit(obj","path":[["/","async"],[".","mapValuesLimit"],["(","obj"]],"flags":[],"source":[["/","async"],[".","mapValuesLimit"]],"sourcestr":"async.mapValuesLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isFunction":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","mapValuesLimit"]],"name":"mapValuesLimit","delimiter":"."},{"path":[["/","async"],[".","mapValuesLimit"],["(","obj"]],"name":"obj","delimiter":"("}]},{"elemID":"component_397","date":"6/5/2020","time":"12:00am","name":"limit","pathname":"limit","pathstr":"async.mapValuesLimit(limit","path":[["/","async"],[".","mapValuesLimit"],["(","limit"]],"flags":[],"source":[["/","async"],[".","mapValuesLimit"]],"sourcestr":"async.mapValuesLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isFunction":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","mapValuesLimit"]],"name":"mapValuesLimit","delimiter":"."},{"path":[["/","async"],[".","mapValuesLimit"],["(","limit"]],"name":"limit","delimiter":"("}]},{"elemID":"component_398","date":"6/5/2020","time":"12:00am","name":"iteratee","pathname":"iteratee","pathstr":"async.mapValuesLimit(iteratee","path":[["/","async"],[".","mapValuesLimit"],["(","iteratee"]],"flags":[],"source":[["/","async"],[".","mapValuesLimit"]],"sourcestr":"async.mapValuesLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isFunction":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","mapValuesLimit"]],"name":"mapValuesLimit","delimiter":"."},{"path":[["/","async"],[".","mapValuesLimit"],["(","iteratee"]],"name":"iteratee","delimiter":"("}]},{"elemID":"component_399","date":"6/5/2020","time":"12:00am","name":"callback","pathname":"callback","pathstr":"async.mapValuesLimit(callback","path":[["/","async"],[".","mapValuesLimit"],["(","callback"]],"flags":[],"source":[["/","async"],[".","mapValuesLimit"]],"sourcestr":"async.mapValuesLimit","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isFunction":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","mapValuesLimit"]],"name":"mapValuesLimit","delimiter":"."},{"path":[["/","async"],[".","mapValuesLimit"],["(","callback"]],"name":"callback","delimiter":"("}]}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"summaryDoc":[{"doc":"\n*\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name mapValuesLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A function to apply to each value in `obj`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a\n     * transformed value. Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an object of the\n     * transformed values from the `obj`. Invoked with (err, result).\n","context":[]}],"details":[{"doc":"\n*\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name mapValuesLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A function to apply to each value in `obj`.\n     * The iteratee is passed a `callback(err, transformed)` which must be called\n     * once it has completed with an error (which can be `null`) and a\n     * transformed value. Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an object of the\n     * transformed values from the `obj`. Invoked with (err, result).\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","mapValuesLimit"]],"name":"mapValuesLimit","delimiter":"."}],"baseTagPath":"../../../../"}
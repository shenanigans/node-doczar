{"elemID":"component_1396","date":"6/5/2020","time":"12:00am","name":"filter","pathname":"filter","pathstr":"async/Collections.filter","path":[["/","async"],["/","Collections"],[".","filter"]],"flags":[],"source":[["/","async"],["/","Collections"]],"sourcestr":"async/Collections","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1391","date":"6/5/2020","time":"12:00am","name":"obj","pathname":"obj","pathstr":"async/Collections.filter(0","path":[["/","async"],["/","Collections"],[".","filter"],["(","obj"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","filter"]],"sourcestr":"async/Collections.filter","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","filter"]],"name":"filter","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","filter"],["(","obj"]],"name":"obj","delimiter":"("}],"sanitaryName":"obj"},{"elemID":"component_1392","date":"6/5/2020","time":"12:00am","name":"iteratee","pathname":"iteratee","pathstr":"async/Collections.filter(1","path":[["/","async"],["/","Collections"],[".","filter"],["(","iteratee"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","filter"]],"sourcestr":"async/Collections.filter","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","filter"]],"name":"filter","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","filter"],["(","iteratee"]],"name":"iteratee","delimiter":"("}],"sanitaryName":"iteratee"},{"elemID":"component_1393","date":"6/5/2020","time":"12:00am","name":"callback","pathname":"callback","pathstr":"async/Collections.filter(2","path":[["/","async"],["/","Collections"],[".","filter"],["(","callback"]],"flags":[],"source":[["/","async"],["/","Collections"],[".","filter"]],"sourcestr":"async/Collections.filter","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","filter"]],"name":"filter","delimiter":"."},{"path":[["/","async"],["/","Collections"],[".","filter"],["(","callback"]],"name":"callback","delimiter":"("}],"sanitaryName":"callback"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n\nReturns a new array of all the values in `coll` which pass an async truth\ntest. This operation is performed in parallel, but the results array will be\nin the same order as the original.\n\n\n### Example\n```javascript\n`iteratee` functions have finished. Invoked with (err, results).\n\nasync.filter(['file1','file2','file3'], function(filePath, callback) {\n    fs.access(filePath, function(err) {\n        callback(null, !err)\n    });\n}, function(err, results) {\n    // results now equals an array of the existing files\n});\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nReturns a new array of all the values in `coll` which pass an async truth\ntest. This operation is performed in parallel, but the results array will be\nin the same order as the original.\n\n\n### Example\n```javascript\n`iteratee` functions have finished. Invoked with (err, results).\n\nasync.filter(['file1','file2','file3'], function(filePath, callback) {\n    fs.access(filePath, function(err) {\n        callback(null, !err)\n    });\n}, function(err, results) {\n    // results now equals an array of the existing files\n});\n\n```\n\n","context":[]}],"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Collections"]],"name":"Collections","delimiter":"/"},{"path":[["/","async"],["/","Collections"],[".","filter"]],"name":"filter","delimiter":"."}],"sourceFile":"dist\\async.js","sourceLine":3342,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"filter","baseTagPath":"../../../../../../"}

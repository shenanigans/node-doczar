{"elemID":"component_509","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.memoize~summary","path":[["/","async"],[".","memoize"],["~","summary"]],"flags":[],"source":[["/","async"],[".","memoize"]],"sourcestr":"async.memoize","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nCaches the results of an `async` function. When creating a hash to store\nfunction results against, the callback is omitted from the hash and an\noptional hash function can be used.\n\nIf no hash function is specified, the first argument is used as a hash key,\nwhich may work reasonably if it is a string or a data type that converts to a\ndistinct string. Note that objects and arrays will not behave reasonably.\nNeither will cases where the other arguments are significant. In such cases,\nspecify your own hash function.\n\nThe cache of results is exposed as the `memo` property of the function\nreturned by `memoize`.\n\nfor storing results. It has all the arguments applied to it apart from the\ncallback, and must be synchronous.\n\n### Example\n```javascript\n\nvar slow_fn = function(name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn('some name', function() {\n    // callback\n});\n\n```\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","memoize"]],"name":"memoize","delimiter":"."},{"path":[["/","async"],[".","memoize"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary","baseTagPath":"../../../../../../"}

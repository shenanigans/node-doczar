{"elemID":"component_969","date":"6/5/2020","time":"12:00am","name":"applyEach","pathname":"applyEach","pathstr":"async/ControlFlow.applyEach","path":[["/","async"],["/","ControlFlow"],[".","applyEach"]],"flags":[],"source":[["/","async"],["/","ControlFlow"]],"sourcestr":"async/ControlFlow","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false},{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n\nApplies the provided arguments to each function in the array, calling\n`callback` after all functions have completed. If you only provide the first\nargument, then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n\n### Example\n```javascript\na function which lets you pass in the arguments as if it were a single\nfunction call.\n\nasync.applyEach([enableSearch, updateSchema], 'bucket', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nApplies the provided arguments to each function in the array, calling\n`callback` after all functions have completed. If you only provide the first\nargument, then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n\n### Example\n```javascript\na function which lets you pass in the arguments as if it were a single\nfunction call.\n\nasync.applyEach([enableSearch, updateSchema], 'bucket', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n\n```\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","applyEach"]],"name":"applyEach","delimiter":"."}],"aliasTo":{"path":[["/","async"],["/","ControlFlow"],[".","applyEach"]],"pathstr":"async/ControlFlow.applyEach"},"sourceFile":"dist\\async.js","sourceLine":1147,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"applyeach","baseTagPath":"../../../../../../"}

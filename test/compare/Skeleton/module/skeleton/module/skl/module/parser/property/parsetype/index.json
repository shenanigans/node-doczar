{"elemID":"component_1206","date":"6/5/2020","time":"12:00am","name":"parseType","pathname":"parseType","pathstr":"skeleton/skl/Parser.parseType","path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"]],"sourcestr":"skeleton/skl/Parser","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1199","date":"6/5/2020","time":"12:00am","name":"typestr","pathname":"typestr","pathstr":"skeleton/skl/Parser.parseType(typestr","path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"],["(","typestr"]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"sourcestr":"skeleton/skl/Parser.parseType","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[[null,"String"]],"isPointer":false,"isArray":false,"generics":[],"name":"String","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"name":"parseType","delimiter":"."},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"],["(","typestr"]],"name":"typestr","delimiter":"("}],"sanitaryName":"typestr"},{"elemID":"component_1200","date":"6/5/2020","time":"12:00am","name":"fileScope","pathname":"fileScope","pathstr":"skeleton/skl/Parser.parseType(fileScope","path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"],["(","fileScope"]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"sourcestr":"skeleton/skl/Parser.parseType","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","Path"]],"isPointer":false,"isArray":false,"generics":[],"name":"skeleton/skl/Parser/Path","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"name":"parseType","delimiter":"."},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"],["(","fileScope"]],"name":"fileScope","delimiter":"("}],"sanitaryName":"filescope"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1203","date":"6/5/2020","time":"12:00am","pathname":"","pathstr":"skeleton/skl/Parser.parseType)0","path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"],[")",0]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"sourcestr":"skeleton/skl/Parser.parseType","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[{"path":[[null,"Array"]],"isPointer":false,"isArray":false,"generics":[{"name":"skeleton/skl/Parser/Valtype","path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","Valtype"]]}],"name":"Array","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nEach type in the pipe-delimited sequence (by default, length 1) represented as a [Valtype](/Valtype).\n","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"details":[{"doc":"\nEach type in the pipe-delimited sequence (by default, length 1) represented as a [Valtype](/Valtype).\n","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"name":"parseType","delimiter":"."},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"],[")",0]],"name":"","delimiter":")"}],"sanitaryName":"~0"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nParse a standard type String. This may include any number of pipe-delimited iterations of paths\nwith optional generic types.","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"details":[{"doc":"\nParse a standard type String. This may include any number of pipe-delimited iterations of paths\nwith optional generic types.","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],[".","parseType"]],"name":"parseType","delimiter":"."}],"sourceFile":"skl\\Parser\\Parser.js","sourceLine":173,"sanitaryName":"parsetype","baseTagPath":"../../../../../../../../"}

{"elemID":"component_286","date":"6/5/2020","time":"12:00am","name":"summary","pathname":"summary","pathstr":"async.concat~summary","path":[["/","async"],[".","concat"],["~","summary"]],"flags":[],"source":[["/","async"],[".","concat"]],"sourcestr":"async.concat","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"spare","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":true,"isModule":false,"isClass":false,"simpleCtype":"spare","hideCtype":false,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"doc":[{"doc":"\n\nApplies `iteratee` to each item in `coll`, concatenating the results. Returns\nthe concatenated list. The `iteratee`s are called in parallel, and the\nresults are concatenated as they return. There is no guarantee that the\nresults array will be returned in the original order of `coll` passed to the\n`iteratee` function.\n\nThe iteratee is passed a `callback(err, results)` which must be called once\nit has completed with an error (which can be `null`) and an array of results.\nInvoked with (item, callback).\n`iteratee` functions have finished, or an error occurs. Results is an array\ncontaining the concatenated results of the `iteratee` function. Invoked with\n(err, results).\n\n### Example\n```javascript\n\nasync.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n    // files is now a list of filenames that exist in the 3 directories\n});\n\n```\n\n","context":[]}],"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],[".","concat"]],"name":"concat","delimiter":"."},{"path":[["/","async"],[".","concat"],["~","summary"]],"name":"summary","delimiter":"~"}],"sanitaryName":"summary","baseTagPath":"../../../../../../"}

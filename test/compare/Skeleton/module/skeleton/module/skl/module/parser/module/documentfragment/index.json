{"elemID":"component_1137","date":"6/5/2020","time":"12:00am","name":"DocumentFragment","pathname":"DocumentFragment","pathstr":"skeleton/skl/Parser/DocumentFragment","path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"]],"sourcestr":"skeleton/skl/Parser","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"module","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":true,"isClass":false,"simpleCtype":"module","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[{"elemID":"component_1134","date":"6/5/2020","time":"12:00am","name":"context","pathname":"context","pathstr":"skeleton/skl/Parser/DocumentFragment#context","path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"],["#","context"]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"]],"sourcestr":"skeleton/skl/Parser/DocumentFragment","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","Path"]],"isPointer":false,"isArray":false,"generics":[],"name":"skeleton/skl/Parser/Path","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nThe scope path which should be appended to crosslink target paths begining with a delimiter\ncharacter.\n","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"details":[{"doc":"\nThe scope path which should be appended to crosslink target paths begining with a delimiter\ncharacter.\n","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"]],"name":"DocumentFragment","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"],["#","context"]],"name":"context","delimiter":"#"}],"sanitaryName":"context"},{"elemID":"component_1131","date":"6/5/2020","time":"12:00am","name":"value","pathname":"value","pathstr":"skeleton/skl/Parser/DocumentFragment#value","path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"],["#","value"]],"flags":[],"source":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"]],"sourcestr":"skeleton/skl/Parser/DocumentFragment","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"member","valtype":[{"path":[[null,"String"]],"isPointer":false,"isArray":false,"generics":[],"name":"String","explicit":true}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"member","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nThe markdown text.","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"details":[{"doc":"\nThe markdown text.","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"]],"name":"DocumentFragment","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"],["#","value"]],"name":"value","delimiter":"#"}],"sanitaryName":"value"}],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\nRepresents a single block of markdown text and wraps it with its context to ensure proper\ncrosslinking. The same markdown doc is often rendered twice, once in a parent context and again\non the Component's own page. To make generated docs compatible with local file view, either all\nlinks must be local paths or the entire page must be initialized to root with a `<base>`.\nBecause `skeleton` chooses to use local links, the `href` for a given path changes between\nrendering contexts.","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"details":[{"doc":"\nRepresents a single block of markdown text and wraps it with its context to ensure proper\ncrosslinking. The same markdown doc is often rendered twice, once in a parent context and again\non the Component's own page. To make generated docs compatible with local file view, either all\nlinks must be local paths or the entire page must be initialized to root with a `<base>`.\nBecause `skeleton` chooses to use local links, the `href` for a given path changes between\nrendering contexts.","context":[["/","skeleton"],["/","skl"],["/","Parser"]]}],"isClasslike":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","skeleton"]],"name":"skeleton","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"]],"name":"skl","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"]],"name":"Parser","delimiter":"/"},{"path":[["/","skeleton"],["/","skl"],["/","Parser"],["/","DocumentFragment"]],"name":"DocumentFragment","delimiter":"/"}],"sanitaryName":"documentfragment","baseTagPath":"../../../../../../../../"}

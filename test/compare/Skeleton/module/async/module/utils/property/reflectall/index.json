{"elemID":"component_1711","date":"6/5/2020","time":"12:00am","name":"reflectAll","pathname":"reflectAll","pathstr":"async/Utils.reflectAll","path":[["/","async"],["/","Utils"],[".","reflectAll"]],"flags":[],"source":[["/","async"],["/","Utils"]],"sourcestr":"async/Utils","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false},{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1705","date":"6/5/2020","time":"12:00am","name":"tasks","pathname":"tasks","pathstr":"async/Utils.reflectAll(0","path":[["/","async"],["/","Utils"],[".","reflectAll"],["(","tasks"]],"flags":[],"source":[["/","async"],["/","Utils"],[".","reflectAll"]],"sourcestr":"async/Utils.reflectAll","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Utils"]],"name":"Utils","delimiter":"/"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"]],"name":"reflectAll","delimiter":"."},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],["(","tasks"]],"name":"tasks","delimiter":"("}],"sanitaryName":"tasks"}],"finalArgs":[],"finalKwargs":[],"returns":[{"elemID":"component_1708","date":"6/5/2020","time":"12:00am","name":"result","pathname":"result","pathstr":"async/Utils.reflectAll)","path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"]],"flags":[],"source":[["/","async"],["/","Utils"],[".","reflectAll"]],"sourcestr":"async/Utils.reflectAll","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"returns","valtype":[{"path":[[null,"Object"]],"isPointer":false,"isArray":false,"generics":[],"name":"Object","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"returns","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[{"elemID":"component_1707","date":"6/5/2020","time":"12:00am","name":"push","pathname":"push","pathstr":"async/Utils.reflectAll)result.push","path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"],[".","push"]],"flags":[],"source":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"]],"sourcestr":"async/Utils.reflectAll)","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1706","date":"6/5/2020","time":"12:00am","name":"taskCb","pathname":"taskCb","pathstr":"async/Utils.reflectAll)result.push(0","path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"],[".","push"],["(","taskCb"]],"flags":[],"source":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"],[".","push"]],"sourcestr":"async/Utils.reflectAll)result.push","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Utils"]],"name":"Utils","delimiter":"/"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"]],"name":"reflectAll","delimiter":"."},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"]],"name":"result","delimiter":")"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"],[".","push"]],"name":"push","delimiter":"."},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"],[".","push"],["(","taskCb"]],"name":"taskCb","delimiter":"("}],"sanitaryName":"taskcb"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":2091,"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Utils"]],"name":"Utils","delimiter":"/"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"]],"name":"reflectAll","delimiter":"."},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"]],"name":"result","delimiter":")"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"],[".","push"]],"name":"push","delimiter":"."}],"sanitaryName":"push"}],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"isInline":true,"hasConstructorInfo":false,"isFunction":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Utils"]],"name":"Utils","delimiter":"/"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"]],"name":"reflectAll","delimiter":"."},{"path":[["/","async"],["/","Utils"],[".","reflectAll"],[")","result"]],"name":"result","delimiter":")"}],"sanitaryName":"result"}],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"sourceFile":"dist\\async.js","sourceLine":4200,"summaryDoc":[{"doc":"\n\nA helper function that wraps an array or an object of functions with reflect.\n\n\n### Example\n```javascript\n`async.reflect`\n\nlet tasks = [\n    function(callback) {\n        setTimeout(function() {\n            callback(null, 'one');\n        }, 200);\n    },\n    function(callback) {\n        // do some more stuff but error ...\n        callback(new Error('bad stuff happened'));\n    },\n    function(callback) {\n        setTimeout(function() {\n            callback(null, 'two');\n        }, 100);\n    }\n];\n\nasync.parallel(async.reflectAll(tasks),\n// optional callback\nfunction(err, results) {\n    // values\n    // results[0].value = 'one'\n    // results[1].error = Error('bad stuff happened')\n    // results[2].value = 'two'\n});\n\n// an example using an object instead of an array\nlet tasks = {\n    one: function(callback) {\n        setTimeout(function() {\n            callback(null, 'one');\n        }, 200);\n    },\n    two: function(callback) {\n        callback('two');\n    },\n    three: function(callback) {\n        setTimeout(function() {\n            callback(null, 'three');\n        }, 100);\n    }\n};\n\nasync.parallel(async.reflectAll(tasks),\n// optional callback\nfunction(err, results) {\n    // values\n    // results.one.value = 'one'\n    // results.two.error = 'two'\n    // results.three.value = 'three'\n});\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nA helper function that wraps an array or an object of functions with reflect.\n\n\n### Example\n```javascript\n`async.reflect`\n\nlet tasks = [\n    function(callback) {\n        setTimeout(function() {\n            callback(null, 'one');\n        }, 200);\n    },\n    function(callback) {\n        // do some more stuff but error ...\n        callback(new Error('bad stuff happened'));\n    },\n    function(callback) {\n        setTimeout(function() {\n            callback(null, 'two');\n        }, 100);\n    }\n];\n\nasync.parallel(async.reflectAll(tasks),\n// optional callback\nfunction(err, results) {\n    // values\n    // results[0].value = 'one'\n    // results[1].error = Error('bad stuff happened')\n    // results[2].value = 'two'\n});\n\n// an example using an object instead of an array\nlet tasks = {\n    one: function(callback) {\n        setTimeout(function() {\n            callback(null, 'one');\n        }, 200);\n    },\n    two: function(callback) {\n        callback('two');\n    },\n    three: function(callback) {\n        setTimeout(function() {\n            callback(null, 'three');\n        }, 100);\n    }\n};\n\nasync.parallel(async.reflectAll(tasks),\n// optional callback\nfunction(err, results) {\n    // values\n    // results.one.value = 'one'\n    // results.two.error = 'two'\n    // results.three.value = 'three'\n});\n\n```\n\n","context":[]}],"isFunction":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","Utils"]],"name":"Utils","delimiter":"/"},{"path":[["/","async"],["/","Utils"],[".","reflectAll"]],"name":"reflectAll","delimiter":"."}],"aliasTo":{"path":[["/","async"],["/","Utils"],[".","reflectAll"]],"pathstr":"async/Utils.reflectAll"},"sanitaryName":"reflectall","baseTagPath":"../../../../../../"}

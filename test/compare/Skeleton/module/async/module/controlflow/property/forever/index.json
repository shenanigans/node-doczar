{"elemID":"component_1566","date":"6/5/2020","time":"12:00am","name":"forever","pathname":"forever","pathstr":"async/ControlFlow.forever","path":[["/","async"],["/","ControlFlow"],[".","forever"]],"flags":[],"source":[["/","async"],["/","ControlFlow"]],"sourcestr":"async/ControlFlow","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"property","valtype":[{"path":[[null,"Function"]],"isPointer":false,"isArray":false,"generics":[],"name":"Function","explicit":false}],"isFunction":true,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"property","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[{"elemID":"component_1562","date":"6/5/2020","time":"12:00am","name":"fn","pathname":"fn","pathstr":"async/ControlFlow.forever(0","path":[["/","async"],["/","ControlFlow"],[".","forever"],["(","fn"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","forever"]],"sourcestr":"async/ControlFlow.forever","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","forever"]],"name":"forever","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","forever"],["(","fn"]],"name":"fn","delimiter":"("}],"sanitaryName":"fn"},{"elemID":"component_1563","date":"6/5/2020","time":"12:00am","name":"errback","pathname":"errback","pathstr":"async/ControlFlow.forever(1","path":[["/","async"],["/","ControlFlow"],[".","forever"],["(","errback"]],"flags":[],"source":[["/","async"],["/","ControlFlow"],[".","forever"]],"sourcestr":"async/ControlFlow.forever","superClasses":[],"interfaces":[],"satisfies":[],"ctype":"argument","valtype":[],"isFunction":false,"isKwarg":false,"isMultiArg":false,"isSpare":false,"isModule":false,"isClass":false,"simpleCtype":"argument","hideCtype":true,"spares":[],"modules":[],"enums":[],"statics":[],"functions":[],"members":[],"methods":[],"localValues":[],"localFunctions":[],"arguments":[],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":false,"isTotallyEmpty":true,"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","forever"]],"name":"forever","delimiter":"."},{"path":[["/","async"],["/","ControlFlow"],[".","forever"],["(","errback"]],"name":"errback","delimiter":"("}],"sanitaryName":"errback"}],"finalArgs":[],"finalKwargs":[],"returns":[],"throws":[],"names":[],"events":[],"signatures":[],"propertySymbols":[],"memberSymbols":[],"returnsSymbols":[],"hasChildren":true,"isTotallyEmpty":false,"summaryDoc":[{"doc":"\n\nCalls the asynchronous function `fn` with a callback parameter that allows it\nto call itself again, in series, indefinitely.\n\nIf an error is passed to the\ncallback then `errback` is called with the error, and execution stops,\notherwise it will never be called.\n\n\n### Example\n```javascript\nthis function will be called, and execution stops. Invoked with (err).\n\nasync.forever(\n    function(next) {\n        // next is suitable for passing to things that need a callback(err [, whatever]);\n        // it will result in this function being called again.\n    },\n    function(err) {\n        // if next is called with a value in its first parameter, it will appear\n        // in here as 'err', and execution will stop.\n    }\n);\n\n```\n\n","context":[]}],"details":[{"doc":"\n\nCalls the asynchronous function `fn` with a callback parameter that allows it\nto call itself again, in series, indefinitely.\n\nIf an error is passed to the\ncallback then `errback` is called with the error, and execution stops,\notherwise it will never be called.\n\n\n### Example\n```javascript\nthis function will be called, and execution stops. Invoked with (err).\n\nasync.forever(\n    function(next) {\n        // next is suitable for passing to things that need a callback(err [, whatever]);\n        // it will result in this function being called again.\n    },\n    function(err) {\n        // if next is called with a value in its first parameter, it will appear\n        // in here as 'err', and execution will stop.\n    }\n);\n\n```\n\n","context":[]}],"hasConstructorInfo":false,"breadcrumbs":[{"path":[["/","async"]],"name":"async","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"]],"name":"ControlFlow","delimiter":"/"},{"path":[["/","async"],["/","ControlFlow"],[".","forever"]],"name":"forever","delimiter":"."}],"sourceFile":"dist\\async.js","sourceLine":3413,"sourceModule":{"path":[["/","async"]],"pathstr":"async"},"sanitaryName":"forever","baseTagPath":"../../../../../../"}
